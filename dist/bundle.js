/*! For license information please see bundle.js.LICENSE.txt */
(()=>{"use strict";var e={"./src/styles/index.scss":(e,n,s)=>{s.r(n)},"./node_modules/uuid/dist/esm-browser/native.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>t});const t={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)}},"./node_modules/uuid/dist/esm-browser/regex.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>t});const t=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i},"./node_modules/uuid/dist/esm-browser/rng.js":(e,n,s)=>{let t;s.r(n),s.d(n,{default:()=>a});const r=new Uint8Array(16);function a(){if(!t&&(t="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!t))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return t(r)}},"./node_modules/uuid/dist/esm-browser/stringify.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>o,unsafeStringify:()=>a});var t=s("./node_modules/uuid/dist/esm-browser/validate.js");const r=[];for(let e=0;e<256;++e)r.push((e+256).toString(16).slice(1));function a(e,n=0){return(r[e[n+0]]+r[e[n+1]]+r[e[n+2]]+r[e[n+3]]+"-"+r[e[n+4]]+r[e[n+5]]+"-"+r[e[n+6]]+r[e[n+7]]+"-"+r[e[n+8]]+r[e[n+9]]+"-"+r[e[n+10]]+r[e[n+11]]+r[e[n+12]]+r[e[n+13]]+r[e[n+14]]+r[e[n+15]]).toLowerCase()}const o=function(e,n=0){const s=a(e,n);if(!(0,t.default)(s))throw TypeError("Stringified UUID is invalid");return s}},"./node_modules/uuid/dist/esm-browser/v4.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>o});var t=s("./node_modules/uuid/dist/esm-browser/native.js"),r=s("./node_modules/uuid/dist/esm-browser/rng.js"),a=s("./node_modules/uuid/dist/esm-browser/stringify.js");const o=function(e,n,s){if(t.default.randomUUID&&!n&&!e)return t.default.randomUUID();const o=(e=e||{}).random||(e.rng||r.default)();if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,n){s=s||0;for(let e=0;e<16;++e)n[s+e]=o[e];return n}return(0,a.unsafeStringify)(o)}},"./node_modules/uuid/dist/esm-browser/validate.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>r});var t=s("./node_modules/uuid/dist/esm-browser/regex.js");const r=function(e){return"string"==typeof e&&t.default.test(e)}},"./src/components/ComponentSection/ComponentSection.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>r});var t=s("./src/components/Element.js");const r=(e,n,s=!1)=>{const r=(0,t.default)("h2",{className:"mb-2",innerText:e});n=(0,t.default)("div",{className:"component-body"},[n]);const a=(0,t.default)("div",{className:"p-1 hr-div "},[(0,t.default)("hr")]),o=(0,t.default)("div",{className:"component-section"});return o.appendChild(r),n&&o.appendChild(n),s&&n.appendChild(a),o}},"./src/components/Content/Content.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>c});var t=s("./src/components/Element.js"),r=s("./src/components/ComponentSection/ComponentSection.js"),a=s("./src/components/NavBar/NabBar.js"),o=s("./src/components/ImageCarousel/ImageCarousel.js");s("./src/components/base-elements/Icon.js");const c=()=>{const e=(0,t.default)("div",{id:"content"});return e.appendChild((0,r.default)("Navbar With Dropdown",(0,a.default)(),!0)),e.appendChild((0,r.default)("Image Carousel",(0,o.default)(),!0)),e}},"./src/components/Element.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>t});const t=(e,n,s=null)=>{s&&!Array.isArray(s)&&(s=[s]);const t=Object.assign(document.createElement(e),n);return s&&s.forEach((e=>t.appendChild(e))),t}},"./src/components/ImageCarousel/CarouselNav.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});var t=s("./src/components/Element.js"),r=s("./src/components/ImageCarousel/ui/carousel-ui.js");const a=e=>(0,t.default)("div",{id:"",className:"carousel-nav pt-1"},[...e.map(((e,n)=>{return s=e.uuid,a=!!e.isActive,(0,t.default)("button",{id:`carousel-nav-${s}`,className:"carousel-indicator display-i-b bg-gray-light-6 "+(a?"active":""),onclick:function(){(0,r.clickCarouselNav)(s)}});var s,a}))])},"./src/components/ImageCarousel/CarouselSlide.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>r});var t=s("./src/components/Element.js");s("./src/components/base-elements/Image.js");const r=(e,n,s)=>{const r=(0,t.default)("img",{src:e,className:"carousel-image"});return(0,t.default)("div",{id:"carousel-slide-"+n,className:"carousel-slide "+(s?"active":"")},[r])}},"./src/components/ImageCarousel/CarouselTrack.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});var t=s("./src/components/Element.js"),r=s("./src/components/ImageCarousel/CarouselSlide.js");s("./src/components/ImageCarousel/assets/brick.png"),s("./src/components/ImageCarousel/assets/paint-face.png"),s("./src/components/ImageCarousel/assets/mac.png");const a=e=>(0,t.default)("ul",{id:"",className:"carousel-track"},[...e.map(((e,n)=>(0,r.default)(e.src,e.uuid,!!e.isActive)))])},"./src/components/ImageCarousel/CarouselTrackContainer.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});var t=s("./src/components/Element.js"),r=s("./src/components/ImageCarousel/CarouselTrack.js");const a=e=>(0,t.default)("div",{id:"",className:"carousel-track-container"},[(0,r.default)(e)])},"./src/components/ImageCarousel/ImageCarousel.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>l});var t=s("./src/components/Element.js"),r=s("./src/components/ImageCarousel/LeftButton.js"),a=s("./src/components/ImageCarousel/RightButton.js"),o=s("./src/components/ImageCarousel/CarouselTrackContainer.js"),c=s("./src/components/ImageCarousel/CarouselNav.js"),u=s("./node_modules/uuid/dist/esm-browser/v4.js"),i=s("./src/components/ImageCarousel/data/imageLoader.js");const l=()=>{const e="bg-transparent border-none p-1",n=(0,r.default)(e),s=(0,a.default)(e);return Array(4).fill(null).map((e=>(0,u.default)())),(0,t.default)("div",{id:"",className:"carousel pt-1 pb-1"},[n,(0,o.default)(i.imageData),s,(0,c.default)(i.imageData)])}},"./src/components/ImageCarousel/LeftButton.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>o});var t=s("./src/components/Element.js"),r=s("./src/components/base-elements/Icon.js"),a=s("./src/components/ImageCarousel/ui/carousel-ui.js");const o=e=>{const n=(0,r.default)("icon-up-arrow rotate-270 ");return(0,t.default)("button",{id:"",className:"carousel-button left "+e,onclick(){(0,a.clickCarouselLeft)()}},[n])}},"./src/components/ImageCarousel/RightButton.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>o});var t=s("./src/components/Element.js"),r=s("./src/components/base-elements/Icon.js"),a=s("./src/components/ImageCarousel/ui/carousel-ui.js");const o=e=>{const n=(0,r.default)("icon-up-arrow rotate-90");return(0,t.default)("button",{id:"",className:"carousel-button right "+e,onclick(){(0,a.clickCarouselRight)()}},[n])}},"./src/components/ImageCarousel/data/imageLoader.js":(e,n,s)=>{s.r(n),s.d(n,{imageData:()=>u});var t=s("./node_modules/uuid/dist/esm-browser/v4.js"),r=s("./src/components/ImageCarousel/assets/brick.png"),a=s("./src/components/ImageCarousel/assets/paint-face.png"),o=s("./src/components/ImageCarousel/assets/mac.png"),c=s("./src/components/ImageCarousel/assets/computer.png");const u=[{src:r,uuid:(0,t.default)(),isActive:!0},{src:a,uuid:(0,t.default)()},{src:o,uuid:(0,t.default)()},{src:c,uuid:(0,t.default)()}]},"./src/components/ImageCarousel/ui/carousel-ui.js":(e,n,s)=>{function t(){return[...document.querySelector(".carousel-track").childNodes]}function r(){return t().map((e=>e.id))}function a(){const e=r(),n=document.querySelector(".carousel-slide.active").id;return e.indexOf(n)}function o(e){const n=[...document.querySelectorAll(".carousel-indicator")],s=document.getElementById(`carousel-nav-${e}`),r=document.getElementById(`carousel-slide-${e}`);t().forEach((e=>e.classList.remove("active"))),r.classList.add("active"),n.forEach((e=>e.classList.remove("active"))),s.classList.add("active")}function c(e){o(e)}function u(){const e=r()[function(){let e=a()+1;return e>r().length-1?0:e}()].replace("carousel-slide-","");console.log(e),o(e)}function i(){const e=r()[function(){let e=a()-1;return e<0?r().length-1:e}()].replace("carousel-slide-","");console.log(e),o(e)}s.r(n),s.d(n,{clickCarouselLeft:()=>i,clickCarouselNav:()=>c,clickCarouselRight:()=>u,gotoSpecificSlide:()=>o})},"./src/components/NavBar/ExpandableNavLink.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});var t=s("./src/components/Element.js"),r=(s("./src/components/NavBar/NavLink.js"),s("./src/components/base-elements/Icon.js"));const a=e=>{const n=e.subLinkObjects?e.subLinkObjects:[],s=(0,r.default)("icon-github-cat ml-half"),a=(0,t.default)("a",{innerText:e.innerText,className:"top-link pt-1 pr-2 pb-1 pl-1 bg-transparent text-white border-none text-uppercase cursor-pointer "},[]),o=(0,t.default)("div",{className:"dropdown-content"},[...n.map((e=>{return n=e.innerText,r=e.href,"bg-primary-light-1 bg-hover-primary-dark-2",(0,t.default)("a",{innerText:n,href:r,className:"bg-primary-light-1 bg-hover-primary-dark-2"},"github repo"===n.toLowerCase()?[s]:[]);var n,r}))]);return(0,t.default)("div",{className:"dropdown bg-primary-light-1 text-uppercase bg-hover-primary-dark-2 cursor-pointer mr-1"},[a,o])}},"./src/components/NavBar/MenuButton.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>c});var t=s("./src/components/Element.js"),r=s("./src/components/base-elements/Icon.js"),a=s("./src/managers/uiManager/uiManager.js");function o(){a.default.toggleMobileMenu()}const c=()=>{const e=(0,r.default)("icon-hamburger-menu text-white font-lg"),n=(0,t.default)("button",{className:"menu-button m-1 btn bg-transparent border-none",onclick:o},[e]);return(0,t.default)("div",{className:"container"},[n])}},"./src/components/NavBar/MobileMenu.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});var t=s("./src/components/Element.js"),r=s("./src/components/NavBar/NavLinks.js");const a=()=>(0,t.default)("div",{id:"",className:"mobile-menu"},[(0,r.default)(!0)])},"./src/components/NavBar/NabBar.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>c});var t=s("./src/components/Element.js"),r=s("./src/components/NavBar/NavLinks.js"),a=s("./src/components/NavBar/MenuButton.js"),o=s("./src/components/NavBar/MobileMenu.js");const c=()=>{const e=(0,t.default)("h2",{className:"text-lg",innerText:"Navbar.com"}),n=(0,t.default)("p",{className:"",innerText:"I made this myself"}),s=(e,n)=>(0,t.default)("div",{className:`${e} container`},[...n]),c=(0,t.default)("nav",{className:"container bg-primary flex-column navbar"},[s("p-1 flex-wrap",[e,n]),s("nav-links",[(0,r.default)()]),s("",[(0,a.default)()])]);return(0,t.default)("div",{className:"nav-wrapper text-white"},[c,(0,o.default)()])}},"./src/components/NavBar/NavLink.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>r});var t=s("./src/components/Element.js");const r=e=>{const{innerText:n}=e,{href:s}=e,r=(0,t.default)("div",{id:"",className:"bg-primary-light-1 p-1 text-uppercase bg-hover-primary-dark-2 cursor-pointer mr-1"},[((e,n,s)=>(0,t.default)("a",{innerText:e,href:n,className:""}))(n,s)]);return r}},"./src/components/NavBar/NavLinks.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>c});var t=s("./src/components/Element.js"),r=s("./src/components/NavBar/NavLink.js"),a=s("./src/components/NavBar/ExpandableNavLink.js"),o=s("./src/managers/dataManagers/navLinkData.js");const c=e=>(e=!!e,(0,t.default)("ul",{className:"container nav-links"},o.navLinkElementInfo.map((n=>n.subLinkObjects&&!e?(0,a.default)(n):(0,r.default)(n)))))},"./src/components/base-elements/Icon.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>r});var t=s("./src/components/Element.js");const r=e=>(0,t.default)("i",{className:`icon ${e} display-i-b`})},"./src/components/base-elements/Image.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>r});var t=s("./src/components/Element.js");const r=e=>(0,t.default)("img",{src:e})},"./src/managers/dataManagers/navLinkData.js":(e,n,s)=>{s.r(n),s.d(n,{navLinkElementInfo:()=>t});const t=[{innerText:"contact",href:"#",subLinkObjects:[{innerText:"Github Repo",href:"https://github.com/carlin-mitchell/custom-components-js"},{innerText:"Github Live",href:"https://carlin-mitchell.github.io/custom-components-js/"},{innerText:"Sub Link 3",href:"#"},{innerText:"Sub Link 4",href:"#"}]},{innerText:"about",href:"#"},{innerText:"pricing",href:"#"},{innerText:"links",href:"#",subLinkObjects:[{innerText:"Sub Link 1",href:"#"},{innerText:"Sub Link 2",href:"#"},{innerText:"Sub Link 3",href:"#"},{innerText:"Sub Link 4",href:"#"}]},{innerText:"events",href:"#",subLinkObjects:[{innerText:"Sub Link 1",href:"#"},{innerText:"Sub Link 2",href:"#"},{innerText:"Sub Link 3",href:"#"},{innerText:"Sub Link 4",href:"#"}]}]},"./src/managers/uiManager/mobileMenu-ui.js":(e,n,s)=>{function t(){document.querySelector(".mobile-menu").classList.contains("menu-down")?r():a()}function r(){const e=document.querySelector(".mobile-menu");e.classList.remove("menu-down"),e.classList.add("menu-up")}function a(){const e=document.querySelector(".mobile-menu");e.classList.remove("menu-up"),e.classList.add("menu-down")}s.r(n),s.d(n,{mobileMenuDown:()=>a,mobileMenuUp:()=>r,toggleMobileMenu:()=>t})},"./src/managers/uiManager/uiManager.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>r});var t=s("./src/managers/uiManager/mobileMenu-ui.js");const r={toggleMobileMenu:t.toggleMobileMenu,mobileMenuUp:t.mobileMenuUp}},"./src/managers/uiManager/windowEventListeners.js":(e,n,s)=>{s.r(n),s.d(n,{applyWindowListeners:()=>o});var t=s("./src/managers/uiManager/mobileMenu-ui.js"),r=s("./src/utils.js");s("./src/components/ImageCarousel/ui/carousel-ui.js");const a={xs:0,sm:480,md:720,lg:960,xl:1200};function o(){window.onresize=(0,r.debounce)((function(e){const{innerWidth:n}=e.target;n>=a.md&&document.querySelector(".mobile-menu").classList.contains("menu-down")&&(0,t.mobileMenuUp)()}))}},"./src/utils.js":(e,n,s)=>{s.r(n),s.d(n,{capitalize:()=>a,debounce:()=>r,truncateAndAddEllipse:()=>t});const t=(e,n)=>e.slice(0,n).trimEnd()+"...",r=function(e){let n;return function(){let s=this,t=arguments;n&&window.cancelAnimationFrame(n),n=window.requestAnimationFrame((function(){e.apply(s,t)}))}};function a(e){return e?e[0].toUpperCase()+e.slice(1).toLowerCase():e}},"./src/components/ImageCarousel/assets/brick.png":(e,n,s)=>{e.exports=s.p+"67ae7fce1151c2d3079d.png"},"./src/components/ImageCarousel/assets/computer.png":(e,n,s)=>{e.exports=s.p+"3ee4c9ea33159582bdba.png"},"./src/components/ImageCarousel/assets/mac.png":(e,n,s)=>{e.exports=s.p+"ee5457e45a1adb489afc.png"},"./src/components/ImageCarousel/assets/paint-face.png":(e,n,s)=>{e.exports=s.p+"4a31a7dd5d0e7aedc21f.png"}},n={};function s(t){var r=n[t];if(void 0!==r)return r.exports;var a=n[t]={exports:{}};return e[t](a,a.exports,s),a.exports}s.d=(e,n)=>{for(var t in n)s.o(n,t)&&!s.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},s.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),s.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),s.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;s.g.importScripts&&(e=s.g.location+"");var n=s.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var t=n.getElementsByTagName("script");if(t.length)for(var r=t.length-1;r>-1&&!e;)e=t[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),s.p=e})();var t={};(()=>{s.r(t),s("./src/styles/index.scss");var e=s("./src/components/Content/Content.js"),n=s("./src/managers/uiManager/windowEventListeners.js");document.body.appendChild((0,e.default)()),document.body.classList.add("p-2"),(0,n.applyWindowListeners)()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QVN1SSxxQkFBcUIsVUFDNUMsR0FBR0QsRUFBUXpGLE9BRVYsSUFEQSxJQUFJL0UsRUFBSXdLLEVBQVF6RixPQUFTLEVBQ2xCL0UsR0FBSyxJQUFNb0ssR0FBV0EsRUFBWUksRUFBUXhLLEtBQUtrRCxHQUV4RCxDQUlELElBQUtrSCxFQUFXLE1BQU0sSUFBSXRLLE1BQU0seURBQ2hDc0ssRUFBWUEsRUFBVW5GLFFBQVEsT0FBUSxJQUFJQSxRQUFRLFFBQVMsSUFBSUEsUUFBUSxZQUFhLEtBQ3BGMEQsRUFBb0IrQixFQUFJTixnS0NYeEJsSSxTQUFTeUksS0FBS3BKLGFBQVksZ0JBQzFCVyxTQUFTeUksS0FBS2hHLFVBQVVFLElBQUksUUFFNUIsSUFBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL25hdGl2ZS5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvcmVnZXguanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3JuZy5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvc3RyaW5naWZ5LmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci92NC5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdmFsaWRhdGUuanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUvLi9zcmMvY29tcG9uZW50cy9Db21wb25lbnRTZWN0aW9uL0NvbXBvbmVudFNlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUvLi9zcmMvY29tcG9uZW50cy9Db250ZW50L0NvbnRlbnQuanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUvLi9zcmMvY29tcG9uZW50cy9FbGVtZW50LmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlLy4vc3JjL2NvbXBvbmVudHMvSW1hZ2VDYXJvdXNlbC9DYXJvdXNlbE5hdi5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS8uL3NyYy9jb21wb25lbnRzL0ltYWdlQ2Fyb3VzZWwvQ2Fyb3VzZWxTbGlkZS5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS8uL3NyYy9jb21wb25lbnRzL0ltYWdlQ2Fyb3VzZWwvQ2Fyb3VzZWxUcmFjay5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS8uL3NyYy9jb21wb25lbnRzL0ltYWdlQ2Fyb3VzZWwvQ2Fyb3VzZWxUcmFja0NvbnRhaW5lci5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS8uL3NyYy9jb21wb25lbnRzL0ltYWdlQ2Fyb3VzZWwvSW1hZ2VDYXJvdXNlbC5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS8uL3NyYy9jb21wb25lbnRzL0ltYWdlQ2Fyb3VzZWwvTGVmdEJ1dHRvbi5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS8uL3NyYy9jb21wb25lbnRzL0ltYWdlQ2Fyb3VzZWwvUmlnaHRCdXR0b24uanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUvLi9zcmMvY29tcG9uZW50cy9JbWFnZUNhcm91c2VsL2RhdGEvaW1hZ2VMb2FkZXIuanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUvLi9zcmMvY29tcG9uZW50cy9JbWFnZUNhcm91c2VsL3VpL2Nhcm91c2VsLXVpLmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlLy4vc3JjL2NvbXBvbmVudHMvTmF2QmFyL0V4cGFuZGFibGVOYXZMaW5rLmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlLy4vc3JjL2NvbXBvbmVudHMvTmF2QmFyL01lbnVCdXR0b24uanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUvLi9zcmMvY29tcG9uZW50cy9OYXZCYXIvTW9iaWxlTWVudS5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS8uL3NyYy9jb21wb25lbnRzL05hdkJhci9OYWJCYXIuanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUvLi9zcmMvY29tcG9uZW50cy9OYXZCYXIvTmF2TGluay5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS8uL3NyYy9jb21wb25lbnRzL05hdkJhci9OYXZMaW5rcy5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS8uL3NyYy9jb21wb25lbnRzL2Jhc2UtZWxlbWVudHMvSWNvbi5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS8uL3NyYy9jb21wb25lbnRzL2Jhc2UtZWxlbWVudHMvSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUvLi9zcmMvbWFuYWdlcnMvZGF0YU1hbmFnZXJzL25hdkxpbmtEYXRhLmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlLy4vc3JjL21hbmFnZXJzL3VpTWFuYWdlci9tb2JpbGVNZW51LXVpLmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlLy4vc3JjL21hbmFnZXJzL3VpTWFuYWdlci91aU1hbmFnZXIuanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUvLi9zcmMvbWFuYWdlcnMvdWlNYW5hZ2VyL3dpbmRvd0V2ZW50TGlzdGVuZXJzLmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlLy4vc3JjL3V0aWxzLmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2JvaWxlcnBsYXRlL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL2JvaWxlcnBsYXRlL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUvd2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS8uL3NyYy9hcHAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcmFuZG9tVVVJRCA9IHR5cGVvZiBjcnlwdG8gIT09ICd1bmRlZmluZWQnICYmIGNyeXB0by5yYW5kb21VVUlEICYmIGNyeXB0by5yYW5kb21VVUlELmJpbmQoY3J5cHRvKTtcbmV4cG9ydCBkZWZhdWx0IHtcbiAgcmFuZG9tVVVJRFxufTsiLCJleHBvcnQgZGVmYXVsdCAvXig/OlswLTlhLWZdezh9LVswLTlhLWZdezR9LVsxLTVdWzAtOWEtZl17M30tWzg5YWJdWzAtOWEtZl17M30tWzAtOWEtZl17MTJ9fDAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMCkkL2k7IiwiLy8gVW5pcXVlIElEIGNyZWF0aW9uIHJlcXVpcmVzIGEgaGlnaCBxdWFsaXR5IHJhbmRvbSAjIGdlbmVyYXRvci4gSW4gdGhlIGJyb3dzZXIgd2UgdGhlcmVmb3JlXG4vLyByZXF1aXJlIHRoZSBjcnlwdG8gQVBJIGFuZCBkbyBub3Qgc3VwcG9ydCBidWlsdC1pbiBmYWxsYmFjayB0byBsb3dlciBxdWFsaXR5IHJhbmRvbSBudW1iZXJcbi8vIGdlbmVyYXRvcnMgKGxpa2UgTWF0aC5yYW5kb20oKSkuXG5sZXQgZ2V0UmFuZG9tVmFsdWVzO1xuY29uc3Qgcm5kczggPSBuZXcgVWludDhBcnJheSgxNik7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBybmcoKSB7XG4gIC8vIGxhenkgbG9hZCBzbyB0aGF0IGVudmlyb25tZW50cyB0aGF0IG5lZWQgdG8gcG9seWZpbGwgaGF2ZSBhIGNoYW5jZSB0byBkbyBzb1xuICBpZiAoIWdldFJhbmRvbVZhbHVlcykge1xuICAgIC8vIGdldFJhbmRvbVZhbHVlcyBuZWVkcyB0byBiZSBpbnZva2VkIGluIGEgY29udGV4dCB3aGVyZSBcInRoaXNcIiBpcyBhIENyeXB0byBpbXBsZW1lbnRhdGlvbi5cbiAgICBnZXRSYW5kb21WYWx1ZXMgPSB0eXBlb2YgY3J5cHRvICE9PSAndW5kZWZpbmVkJyAmJiBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzICYmIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMuYmluZChjcnlwdG8pO1xuXG4gICAgaWYgKCFnZXRSYW5kb21WYWx1ZXMpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignY3J5cHRvLmdldFJhbmRvbVZhbHVlcygpIG5vdCBzdXBwb3J0ZWQuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vdXVpZGpzL3V1aWQjZ2V0cmFuZG9tdmFsdWVzLW5vdC1zdXBwb3J0ZWQnKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZ2V0UmFuZG9tVmFsdWVzKHJuZHM4KTtcbn0iLCJpbXBvcnQgdmFsaWRhdGUgZnJvbSAnLi92YWxpZGF0ZS5qcyc7XG4vKipcbiAqIENvbnZlcnQgYXJyYXkgb2YgMTYgYnl0ZSB2YWx1ZXMgdG8gVVVJRCBzdHJpbmcgZm9ybWF0IG9mIHRoZSBmb3JtOlxuICogWFhYWFhYWFgtWFhYWC1YWFhYLVhYWFgtWFhYWFhYWFhYWFhYXG4gKi9cblxuY29uc3QgYnl0ZVRvSGV4ID0gW107XG5cbmZvciAobGV0IGkgPSAwOyBpIDwgMjU2OyArK2kpIHtcbiAgYnl0ZVRvSGV4LnB1c2goKGkgKyAweDEwMCkudG9TdHJpbmcoMTYpLnNsaWNlKDEpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVuc2FmZVN0cmluZ2lmeShhcnIsIG9mZnNldCA9IDApIHtcbiAgLy8gTm90ZTogQmUgY2FyZWZ1bCBlZGl0aW5nIHRoaXMgY29kZSEgIEl0J3MgYmVlbiB0dW5lZCBmb3IgcGVyZm9ybWFuY2VcbiAgLy8gYW5kIHdvcmtzIGluIHdheXMgeW91IG1heSBub3QgZXhwZWN0LiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3V1aWRqcy91dWlkL3B1bGwvNDM0XG4gIHJldHVybiAoYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAwXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDFdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMl1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAzXV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDRdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgNV1dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA2XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDddXSArICctJyArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgOF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA5XV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDEwXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDExXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDEyXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDEzXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDE0XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDE1XV0pLnRvTG93ZXJDYXNlKCk7XG59XG5cbmZ1bmN0aW9uIHN0cmluZ2lmeShhcnIsIG9mZnNldCA9IDApIHtcbiAgY29uc3QgdXVpZCA9IHVuc2FmZVN0cmluZ2lmeShhcnIsIG9mZnNldCk7IC8vIENvbnNpc3RlbmN5IGNoZWNrIGZvciB2YWxpZCBVVUlELiAgSWYgdGhpcyB0aHJvd3MsIGl0J3MgbGlrZWx5IGR1ZSB0byBvbmVcbiAgLy8gb2YgdGhlIGZvbGxvd2luZzpcbiAgLy8gLSBPbmUgb3IgbW9yZSBpbnB1dCBhcnJheSB2YWx1ZXMgZG9uJ3QgbWFwIHRvIGEgaGV4IG9jdGV0IChsZWFkaW5nIHRvXG4gIC8vIFwidW5kZWZpbmVkXCIgaW4gdGhlIHV1aWQpXG4gIC8vIC0gSW52YWxpZCBpbnB1dCB2YWx1ZXMgZm9yIHRoZSBSRkMgYHZlcnNpb25gIG9yIGB2YXJpYW50YCBmaWVsZHNcblxuICBpZiAoIXZhbGlkYXRlKHV1aWQpKSB7XG4gICAgdGhyb3cgVHlwZUVycm9yKCdTdHJpbmdpZmllZCBVVUlEIGlzIGludmFsaWQnKTtcbiAgfVxuXG4gIHJldHVybiB1dWlkO1xufVxuXG5leHBvcnQgZGVmYXVsdCBzdHJpbmdpZnk7IiwiaW1wb3J0IG5hdGl2ZSBmcm9tICcuL25hdGl2ZS5qcyc7XG5pbXBvcnQgcm5nIGZyb20gJy4vcm5nLmpzJztcbmltcG9ydCB7IHVuc2FmZVN0cmluZ2lmeSB9IGZyb20gJy4vc3RyaW5naWZ5LmpzJztcblxuZnVuY3Rpb24gdjQob3B0aW9ucywgYnVmLCBvZmZzZXQpIHtcbiAgaWYgKG5hdGl2ZS5yYW5kb21VVUlEICYmICFidWYgJiYgIW9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmF0aXZlLnJhbmRvbVVVSUQoKTtcbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBjb25zdCBybmRzID0gb3B0aW9ucy5yYW5kb20gfHwgKG9wdGlvbnMucm5nIHx8IHJuZykoKTsgLy8gUGVyIDQuNCwgc2V0IGJpdHMgZm9yIHZlcnNpb24gYW5kIGBjbG9ja19zZXFfaGlfYW5kX3Jlc2VydmVkYFxuXG4gIHJuZHNbNl0gPSBybmRzWzZdICYgMHgwZiB8IDB4NDA7XG4gIHJuZHNbOF0gPSBybmRzWzhdICYgMHgzZiB8IDB4ODA7IC8vIENvcHkgYnl0ZXMgdG8gYnVmZmVyLCBpZiBwcm92aWRlZFxuXG4gIGlmIChidWYpIHtcbiAgICBvZmZzZXQgPSBvZmZzZXQgfHwgMDtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTY7ICsraSkge1xuICAgICAgYnVmW29mZnNldCArIGldID0gcm5kc1tpXTtcbiAgICB9XG5cbiAgICByZXR1cm4gYnVmO1xuICB9XG5cbiAgcmV0dXJuIHVuc2FmZVN0cmluZ2lmeShybmRzKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdjQ7IiwiaW1wb3J0IFJFR0VYIGZyb20gJy4vcmVnZXguanMnO1xuXG5mdW5jdGlvbiB2YWxpZGF0ZSh1dWlkKSB7XG4gIHJldHVybiB0eXBlb2YgdXVpZCA9PT0gJ3N0cmluZycgJiYgUkVHRVgudGVzdCh1dWlkKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdmFsaWRhdGU7IiwiLy8gQ09NUE9ORU5UIElNUE9SVFNcbmltcG9ydCBFbGVtZW50IGZyb20gXCIuLi9FbGVtZW50XCI7XG5cbi8vIExPR0lDIElNUE9SVFNcbi8vXG5cbi8vIENPTVBPTkVOVCBNRVRIT0RTXG4vLyBmdW5jdGlvbiBzb21lTWV0aG9kKCkge1xuLy8gICAvL1xuLy8gfVxuXG5jb25zdCBDb21wb25lbnQgPSAoaGVhZGVyVGV4dCwgY29tcG9uZW50LCBhZGRIciA9IGZhbHNlKSA9PiB7XG4gIGNvbnN0IGhlYWRlciA9IEVsZW1lbnQoXCJoMlwiLCB7XG4gICAgY2xhc3NOYW1lOiBgbWItMmAsXG4gICAgaW5uZXJUZXh0OiBoZWFkZXJUZXh0LFxuICB9KTtcblxuICBjb21wb25lbnQgPSBFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBgY29tcG9uZW50LWJvZHlgIH0sIFtjb21wb25lbnRdKTtcblxuICBjb25zdCBockRpdiA9IEVsZW1lbnQoXG4gICAgXCJkaXZcIixcbiAgICB7XG4gICAgICBjbGFzc05hbWU6IGBwLTEgaHItZGl2IGAsXG4gICAgfSxcbiAgICBbRWxlbWVudChcImhyXCIpXVxuICApO1xuXG4gIGNvbnN0IHNlY3Rpb24gPSBFbGVtZW50KFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IGBjb21wb25lbnQtc2VjdGlvbmAsXG4gIH0pO1xuICBzZWN0aW9uLmFwcGVuZENoaWxkKGhlYWRlcik7XG5cbiAgaWYgKGNvbXBvbmVudCkge1xuICAgIHNlY3Rpb24uYXBwZW5kQ2hpbGQoY29tcG9uZW50KTtcbiAgfVxuICBpZiAoYWRkSHIpIHtcbiAgICBjb21wb25lbnQuYXBwZW5kQ2hpbGQoaHJEaXYpO1xuICB9XG4gIHJldHVybiBzZWN0aW9uO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuIiwiLy8gQ09NUE9ORU5UIElNUE9SVFNcbmltcG9ydCBFbGVtZW50IGZyb20gXCIuLi9FbGVtZW50XCI7XG5pbXBvcnQgQ29tcG9uZW50U2VjdGlvbiBmcm9tIFwiLi4vQ29tcG9uZW50U2VjdGlvbi9Db21wb25lbnRTZWN0aW9uXCI7XG5pbXBvcnQgTmF2QmFyIGZyb20gXCIuLi9OYXZCYXIvTmFiQmFyXCI7XG5pbXBvcnQgSW1hZ2VDYXJvdXNlbCBmcm9tIFwiLi4vSW1hZ2VDYXJvdXNlbC9JbWFnZUNhcm91c2VsXCI7XG5cbmltcG9ydCBJY29uIGZyb20gXCIuLi9iYXNlLWVsZW1lbnRzL0ljb25cIjtcbi8vIExPR0lDIElNUE9SVFNcbi8vXG5cbi8vIENPTVBPTkVOVCBNRVRIT0RTXG4vLyBmdW5jdGlvbiBzb21lTWV0aG9kKCkge1xuLy8gICAvL1xuLy8gfVxuXG5jb25zdCBDb250ZW50ID0gKCkgPT4ge1xuICBjb25zdCBjb250ZW50ID0gRWxlbWVudChcImRpdlwiLCB7IGlkOiBcImNvbnRlbnRcIiB9KTtcblxuICBjb250ZW50LmFwcGVuZENoaWxkKENvbXBvbmVudFNlY3Rpb24oXCJOYXZiYXIgV2l0aCBEcm9wZG93blwiLCBOYXZCYXIoKSwgdHJ1ZSkpO1xuICBjb250ZW50LmFwcGVuZENoaWxkKFxuICAgIENvbXBvbmVudFNlY3Rpb24oXCJJbWFnZSBDYXJvdXNlbFwiLCBJbWFnZUNhcm91c2VsKCksIHRydWUpXG4gICk7XG4gIHJldHVybiBjb250ZW50O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29udGVudDtcbiIsIi8qKlxuICogVGhpcyBGdW5jdGlvbiBhbGxvd3MgeW91IHRvIGNyZWF0ZSBhIGRvbSBlbGVtZW50IHdpdGggaXRzIGluaXRpYWwgYXR0cmlidXRlcyBhbmQgY2hpbGQgZWxlbWVudHMgZGVmaW5lZCBieSBhIHBhc3NlZC1pbiBvYmplY3QgYW5kIGFycmF5IG9mIGNoaWxkIGVsZW1lbnRzXG4gKiBAcGFyYW0ge3N0cmluZ30gdHlwZVN0ciB0aGUgdGFnIG5hbWUgb2YgdGhlIGVsZW1lbnQgdG8gYmUgcmV0dXJuZWQgeW91IHdvdWxkIHVzZSBpbiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KClcbiAqIEBwYXJhbSB7b2JqZWN0fSBwcm9wc09iaiAob3B0aW9uYWwpIGFuIG9iamVjdCBjb250YWluaW5nIHRoZSBpbml0aWFsIHByb3BlcnRpZXMvYXR0cmlidXRlcyB5b3Ugd2FudCB0aGUgZWxlbWVudCB0byBoYXZlXG4gKiBAcGFyYW0ge2FycmF5fSBjaGlsZEFyciAob3B0aW9uYWwpIGFuIG9mIGVsZW1lbnQgb2JqZWN0cyB0byBiZSBhcHBlbmRlZCBhcyBjaGlsZHJlbiB0byB0aGlzIGVsZW1lbnRcbiAqIEByZXR1cm5zIHtFbGVtZW50fSB0aGUgYSByZWZlcmVuY2UgdG8gdGhlIGVsZW1lbnQgY3JlYXRlZCBpbiBtZW1vcnlcbiAqL1xuY29uc3QgRWxlbWVudCA9ICh0eXBlU3RyLCBwcm9wc09iaiwgY2hpbGRBcnIgPSBudWxsKSA9PiB7XG4gIGlmIChjaGlsZEFyciAmJiAhQXJyYXkuaXNBcnJheShjaGlsZEFycikpIHtcbiAgICBjaGlsZEFyciA9IFtjaGlsZEFycl07XG4gIH1cblxuICBjb25zdCBwYXJlbnRFbGVtZW50ID0gT2JqZWN0LmFzc2lnbihcbiAgICBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHR5cGVTdHIpLFxuICAgIHByb3BzT2JqXG4gICk7XG5cbiAgaWYgKGNoaWxkQXJyKSB7XG4gICAgY2hpbGRBcnIuZm9yRWFjaCgoY2hpbGQpID0+IHBhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoY2hpbGQpKTtcbiAgfVxuXG4gIHJldHVybiBwYXJlbnRFbGVtZW50O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgRWxlbWVudDtcbiIsImltcG9ydCBFbGVtZW50IGZyb20gXCIuLi9FbGVtZW50XCI7XG5pbXBvcnQgeyBjbGlja0Nhcm91c2VsTmF2IH0gZnJvbSBcIi4vdWkvY2Fyb3VzZWwtdWlcIjtcblxuLy8gTE9HSUMgSU1QT1JUU1xuLy9cblxuLy8gQ09NUE9ORU5UIE1FVEhPRFNcbi8vIGZ1bmN0aW9uIHNvbWVNZXRob2QoKSB7XG4vLyAgIC8vXG4vLyB9XG5cbmNvbnN0IENhcm91c2VsTmF2ID0gKGltYWdlRGF0YSkgPT4ge1xuICBjb25zdCBjYXJvdXNlbE5hdkluZGljYXRvciA9IChpbWFnZUlkLCBzdGFydHNBY3RpdmUpID0+XG4gICAgRWxlbWVudChcImJ1dHRvblwiLCB7XG4gICAgICBpZDogYGNhcm91c2VsLW5hdi0ke2ltYWdlSWR9YCxcbiAgICAgIGNsYXNzTmFtZTogYGNhcm91c2VsLWluZGljYXRvciBkaXNwbGF5LWktYiBiZy1ncmF5LWxpZ2h0LTYgJHtcbiAgICAgICAgc3RhcnRzQWN0aXZlID8gXCJhY3RpdmVcIiA6IFwiXCJcbiAgICAgIH1gLFxuICAgICAgb25jbGljazogZnVuY3Rpb24gKCkge1xuICAgICAgICBjbGlja0Nhcm91c2VsTmF2KGltYWdlSWQpO1xuICAgICAgfSxcbiAgICB9KTtcblxuICBjb25zdCBuYXZEaXYgPSBFbGVtZW50KFxuICAgIFwiZGl2XCIsXG4gICAge1xuICAgICAgaWQ6IGBgLFxuICAgICAgY2xhc3NOYW1lOiBgY2Fyb3VzZWwtbmF2IHB0LTFgLFxuICAgIH0sXG4gICAgLy8gY2hpbGRyZW5cbiAgICBbXG4gICAgICAuLi5pbWFnZURhdGEubWFwKChvYmosIGluZGV4KSA9PlxuICAgICAgICBjYXJvdXNlbE5hdkluZGljYXRvcihvYmoudXVpZCwgb2JqLmlzQWN0aXZlID8gdHJ1ZSA6IGZhbHNlKVxuICAgICAgKSxcbiAgICBdXG4gICk7XG4gIHJldHVybiBuYXZEaXY7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDYXJvdXNlbE5hdjtcbiIsIi8vIENPTVBPTkVOVCBJTVBPUlRTXG5pbXBvcnQgRWxlbWVudCBmcm9tIFwiLi4vRWxlbWVudFwiO1xuaW1wb3J0IEltYWdlIGZyb20gXCIuLi9iYXNlLWVsZW1lbnRzL0ltYWdlXCI7XG5cbi8vIExPR0lDIElNUE9SVFNcbi8vXG5cbi8vIENPTVBPTkVOVCBNRVRIT0RTXG4vLyBmdW5jdGlvbiBzb21lTWV0aG9kKCkge1xuLy8gICAvL1xuLy8gfVxuXG5jb25zdCBDYXJvdXNlbFNsaWRlID0gKGltYWdlU291cmNlLCBpZCwgc3RhcnRzQWN0aXZlKSA9PiB7XG4gIGNvbnN0IGNhcm91c2VsSW1hZ2UgPSBFbGVtZW50KFwiaW1nXCIsIHtcbiAgICBzcmM6IGltYWdlU291cmNlLFxuICAgIGNsYXNzTmFtZTogXCJjYXJvdXNlbC1pbWFnZVwiLFxuICB9KTtcblxuICBjb25zdCBzbGlkZSA9IEVsZW1lbnQoXG4gICAgXCJkaXZcIixcbiAgICB7XG4gICAgICBpZDogYGNhcm91c2VsLXNsaWRlLWAgKyBpZCxcbiAgICAgIGNsYXNzTmFtZTogYGNhcm91c2VsLXNsaWRlICR7c3RhcnRzQWN0aXZlID8gXCJhY3RpdmVcIiA6IFwiXCJ9YCxcbiAgICB9LFxuICAgIC8vIGNoaWxkcmVuXG4gICAgW2Nhcm91c2VsSW1hZ2VdXG4gICk7XG4gIHJldHVybiBzbGlkZTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENhcm91c2VsU2xpZGU7XG4iLCIvLyBDT01QT05FTlQgSU1QT1JUU1xuaW1wb3J0IEVsZW1lbnQgZnJvbSBcIi4uL0VsZW1lbnRcIjtcbmltcG9ydCBDYXJvdXNlbFNsaWRlIGZyb20gXCIuL0Nhcm91c2VsU2xpZGVcIjtcblxuaW1wb3J0IEJyaWNrIGZyb20gXCIuL2Fzc2V0cy9icmljay5wbmdcIjtcbmltcG9ydCBQYWludEZhY2UgZnJvbSBcIi4vYXNzZXRzL3BhaW50LWZhY2UucG5nXCI7XG5pbXBvcnQgTWFjIGZyb20gXCIuL2Fzc2V0cy9tYWMucG5nXCI7XG5cbi8vIExPR0lDIElNUE9SVFNcbi8vXG5cbi8vIENPTVBPTkVOVCBNRVRIT0RTXG4vLyBmdW5jdGlvbiBzb21lTWV0aG9kKCkge1xuLy8gICAvL1xuLy8gfVxuXG5jb25zdCBDYXJvdXNlbFRyYWNrID0gKGltYWdlRGF0YSkgPT4ge1xuICBjb25zdCBjYXJvdXNlbFRyYWNrID0gRWxlbWVudChcbiAgICBcInVsXCIsXG4gICAge1xuICAgICAgaWQ6IGBgLFxuICAgICAgY2xhc3NOYW1lOiBgY2Fyb3VzZWwtdHJhY2tgLFxuICAgIH0sXG4gICAgLy8gY2hpbGRyZW5cbiAgICBbXG4gICAgICAuLi5pbWFnZURhdGEubWFwKChvYmosIGluZGV4KSA9PlxuICAgICAgICBDYXJvdXNlbFNsaWRlKG9iai5zcmMsIG9iai51dWlkLCBvYmouaXNBY3RpdmUgPyB0cnVlIDogZmFsc2UpXG4gICAgICApLFxuICAgIF1cbiAgKTtcbiAgcmV0dXJuIGNhcm91c2VsVHJhY2s7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDYXJvdXNlbFRyYWNrO1xuIiwiLy8gQ09NUE9ORU5UIElNUE9SVFNcbmltcG9ydCBFbGVtZW50IGZyb20gXCIuLi9FbGVtZW50XCI7XG5pbXBvcnQgQ2Fyb3VzZWxUcmFjayBmcm9tIFwiLi9DYXJvdXNlbFRyYWNrXCI7XG5cbi8vIExPR0lDIElNUE9SVFNcbi8vXG5cbi8vIENPTVBPTkVOVCBNRVRIT0RTXG4vLyBmdW5jdGlvbiBzb21lTWV0aG9kKCkge1xuLy8gICAvL1xuLy8gfVxuXG5jb25zdCBDYXJvdXNlbFRyYWNrQ29udGFpbmVyID0gKGltYWdlRGF0YSkgPT4ge1xuICBjb25zdCBjb250YWluZXIgPSBFbGVtZW50KFxuICAgIFwiZGl2XCIsXG4gICAge1xuICAgICAgaWQ6IGBgLFxuICAgICAgY2xhc3NOYW1lOiBgY2Fyb3VzZWwtdHJhY2stY29udGFpbmVyYCxcbiAgICB9LFxuICAgIC8vIGNoaWxkcmVuXG4gICAgW0Nhcm91c2VsVHJhY2soaW1hZ2VEYXRhKV1cbiAgKTtcbiAgcmV0dXJuIGNvbnRhaW5lcjtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENhcm91c2VsVHJhY2tDb250YWluZXI7XG4iLCIvLyBDT01QT05FTlQgSU1QT1JUU1xuaW1wb3J0IEVsZW1lbnQgZnJvbSBcIi4uL0VsZW1lbnRcIjtcbmltcG9ydCBMZWZ0Q2Fyb3VzZWxCdXR0b24gZnJvbSBcIi4vTGVmdEJ1dHRvblwiO1xuaW1wb3J0IFJpZ2h0Q2Fyb3VzZWxCdXR0b24gZnJvbSBcIi4vUmlnaHRCdXR0b25cIjtcbmltcG9ydCBDYXJvdXNlbFRyYWNrQ29udGFpbmVyIGZyb20gXCIuL0Nhcm91c2VsVHJhY2tDb250YWluZXJcIjtcbmltcG9ydCBDYXJvdXNlbE5hdiBmcm9tIFwiLi9DYXJvdXNlbE5hdlwiO1xuaW1wb3J0IHsgdjQgYXMgdXVpZHY0IH0gZnJvbSBcInV1aWRcIjtcblxuaW1wb3J0IHsgaW1hZ2VEYXRhIH0gZnJvbSBcIi4vZGF0YS9pbWFnZUxvYWRlclwiO1xuXG4vLyBMT0dJQyBJTVBPUlRTXG4vL1xuXG4vLyBDT01QT05FTlQgTUVUSE9EU1xuLy8gZnVuY3Rpb24gc29tZU1ldGhvZCgpIHtcbi8vICAgLy9cbi8vIH1cblxuY29uc3QgSW1hZ2VDYXJvdXNlbCA9ICgpID0+IHtcbiAgY29uc3Qgc2hhcmVkQnV0dG9uQ2xhc3NlcyA9IFwiYmctdHJhbnNwYXJlbnQgYm9yZGVyLW5vbmUgcC0xXCI7XG4gIGNvbnN0IGxlZnRCdXR0b24gPSBMZWZ0Q2Fyb3VzZWxCdXR0b24oc2hhcmVkQnV0dG9uQ2xhc3Nlcyk7XG4gIGNvbnN0IHJpZ2h0QnV0dG9uID0gUmlnaHRDYXJvdXNlbEJ1dHRvbihzaGFyZWRCdXR0b25DbGFzc2VzKTtcblxuICBjb25zdCBpbWFnZUlkcyA9IEFycmF5KDQpXG4gICAgLmZpbGwobnVsbClcbiAgICAubWFwKChlbGVtKSA9PiB1dWlkdjQoKSk7XG5cbiAgY29uc3QgY2Fyb3VzZWwgPSBFbGVtZW50KFxuICAgIFwiZGl2XCIsXG4gICAge1xuICAgICAgaWQ6IGBgLFxuICAgICAgY2xhc3NOYW1lOiBgY2Fyb3VzZWwgcHQtMSBwYi0xYCxcbiAgICB9LFxuICAgIC8vIGNoaWxkcmVuXG4gICAgW1xuICAgICAgbGVmdEJ1dHRvbixcbiAgICAgIENhcm91c2VsVHJhY2tDb250YWluZXIoaW1hZ2VEYXRhKSxcbiAgICAgIHJpZ2h0QnV0dG9uLFxuICAgICAgQ2Fyb3VzZWxOYXYoaW1hZ2VEYXRhKSxcbiAgICBdXG4gICk7XG4gIHJldHVybiBjYXJvdXNlbDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEltYWdlQ2Fyb3VzZWw7XG4iLCIvLyBDT01QT05FTlQgSU1QT1JUU1xuaW1wb3J0IEVsZW1lbnQgZnJvbSBcIi4uL0VsZW1lbnRcIjtcbmltcG9ydCBJY29uIGZyb20gXCIuLi9iYXNlLWVsZW1lbnRzL0ljb25cIjtcbmltcG9ydCB7IGNsaWNrQ2Fyb3VzZWxMZWZ0IH0gZnJvbSBcIi4vdWkvY2Fyb3VzZWwtdWlcIjtcbi8vIExPR0lDIElNUE9SVFNcbi8vXG5cbi8vIENPTVBPTkVOVCBNRVRIT0RTXG4vLyBmdW5jdGlvbiBzb21lTWV0aG9kKCkge1xuLy8gICAvL1xuLy8gfVxuXG5jb25zdCBMZWZ0Q2Fyb3VzZWxCdXR0b24gPSAoc2hhcmVkQ2xhc3NlcykgPT4ge1xuICBjb25zdCBpY29uID0gSWNvbihcImljb24tdXAtYXJyb3cgcm90YXRlLTI3MCBcIik7XG5cbiAgY29uc3QgYnV0dG9uID0gRWxlbWVudChcbiAgICBcImJ1dHRvblwiLFxuICAgIHtcbiAgICAgIGlkOiBgYCxcbiAgICAgIGNsYXNzTmFtZTogYGNhcm91c2VsLWJ1dHRvbiBsZWZ0IGAgKyBzaGFyZWRDbGFzc2VzLFxuICAgICAgb25jbGljaygpIHtcbiAgICAgICAgY2xpY2tDYXJvdXNlbExlZnQoKTtcbiAgICAgIH0sXG4gICAgfSxcbiAgICAvLyBjaGlsZHJlblxuICAgIFtpY29uXVxuICApO1xuICByZXR1cm4gYnV0dG9uO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgTGVmdENhcm91c2VsQnV0dG9uO1xuIiwiLy8gQ09NUE9ORU5UIElNUE9SVFNcbmltcG9ydCBFbGVtZW50IGZyb20gXCIuLi9FbGVtZW50XCI7XG5pbXBvcnQgSWNvbiBmcm9tIFwiLi4vYmFzZS1lbGVtZW50cy9JY29uXCI7XG5pbXBvcnQgeyBjbGlja0Nhcm91c2VsUmlnaHQgfSBmcm9tIFwiLi91aS9jYXJvdXNlbC11aVwiO1xuLy8gTE9HSUMgSU1QT1JUU1xuLy9cblxuLy8gQ09NUE9ORU5UIE1FVEhPRFNcbi8vIGZ1bmN0aW9uIHNvbWVNZXRob2QoKSB7XG4vLyAgIC8vXG4vLyB9XG5cbmNvbnN0IFJpZ2h0Q2Fyb3VzZWxCdXR0b24gPSAoc2hhcmVkQ2xhc3NlcykgPT4ge1xuICBjb25zdCBpY29uID0gSWNvbihcImljb24tdXAtYXJyb3cgcm90YXRlLTkwXCIpO1xuXG4gIGNvbnN0IGJ1dHRvbiA9IEVsZW1lbnQoXG4gICAgXCJidXR0b25cIixcbiAgICB7XG4gICAgICBpZDogYGAsXG4gICAgICBjbGFzc05hbWU6IGBjYXJvdXNlbC1idXR0b24gcmlnaHQgYCArIHNoYXJlZENsYXNzZXMsXG4gICAgICBvbmNsaWNrKCkge1xuICAgICAgICBjbGlja0Nhcm91c2VsUmlnaHQoKTtcbiAgICAgIH0sXG4gICAgfSxcbiAgICAvLyBjaGlsZHJlblxuICAgIFtpY29uXVxuICApO1xuICByZXR1cm4gYnV0dG9uO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgUmlnaHRDYXJvdXNlbEJ1dHRvbjtcbiIsImltcG9ydCB7IHY0IGFzIHV1aWR2NCB9IGZyb20gXCJ1dWlkXCI7XG5cbmltcG9ydCBCcmljayBmcm9tIFwiLi4vYXNzZXRzL2JyaWNrLnBuZ1wiO1xuaW1wb3J0IFBhaW50RmFjZSBmcm9tIFwiLi4vYXNzZXRzL3BhaW50LWZhY2UucG5nXCI7XG5pbXBvcnQgTWFjIGZyb20gXCIuLi9hc3NldHMvbWFjLnBuZ1wiO1xuaW1wb3J0IENvbXB1dGVyIGZyb20gXCIuLi9hc3NldHMvY29tcHV0ZXIucG5nXCI7XG5cbi8vIGFkZCBpc0FjdGl2ZTogdHJ1ZSB0byB0aGUgc2xpZGUgeW91IHdhbnQgdG8gc3RhcnQgYXMgYWN0aXZlXG5leHBvcnQgY29uc3QgaW1hZ2VEYXRhID0gW1xuICB7IHNyYzogQnJpY2ssIHV1aWQ6IHV1aWR2NCgpLCBpc0FjdGl2ZTogdHJ1ZSB9LFxuICB7IHNyYzogUGFpbnRGYWNlLCB1dWlkOiB1dWlkdjQoKSB9LFxuICB7IHNyYzogTWFjLCB1dWlkOiB1dWlkdjQoKSB9LFxuICB7IHNyYzogQ29tcHV0ZXIsIHV1aWQ6IHV1aWR2NCgpIH0sXG5dO1xuIiwiLy8gIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMgVVRJTElUSUVTICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcblxuZnVuY3Rpb24gZ2V0QWxsQ2Fyb3VzZWxTbGlkZXMoKSB7XG4gIHJldHVybiBbLi4uZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJvdXNlbC10cmFja1wiKS5jaGlsZE5vZGVzXTtcbn1cblxuZnVuY3Rpb24gZ2V0QWxsQ2Fyb3VzZWxTbGlkZUlkcygpIHtcbiAgcmV0dXJuIGdldEFsbENhcm91c2VsU2xpZGVzKCkubWFwKChlbGVtKSA9PiBlbGVtLmlkKTtcbn1cblxuZnVuY3Rpb24gZ2V0QWxsQ2Fyb3VzZWxOYXZCdXR0b25zKCkge1xuICByZXR1cm4gWy4uLmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuY2Fyb3VzZWwtaW5kaWNhdG9yXCIpXTtcbn1cblxuZnVuY3Rpb24gZ2V0Q3VycmVudFNsaWRlSW5kZXgoKSB7XG4gIGNvbnN0IGFsbFNsaWRlSWRzID0gZ2V0QWxsQ2Fyb3VzZWxTbGlkZUlkcygpO1xuICBjb25zdCBjdXJyZW50U2xpZGVJZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2Fyb3VzZWwtc2xpZGUuYWN0aXZlXCIpLmlkO1xuICBjb25zdCBjdXJyZW50U2xpZGVJbmRleCA9IGFsbFNsaWRlSWRzLmluZGV4T2YoY3VycmVudFNsaWRlSWQpO1xuXG4gIHJldHVybiBjdXJyZW50U2xpZGVJbmRleDtcbn1cblxuZnVuY3Rpb24gZ2V0UHJldmlvdXNTbGlkZUluZGV4KCkge1xuICBsZXQgcHJldmlvdXNTbGlkZUluZGV4ID0gZ2V0Q3VycmVudFNsaWRlSW5kZXgoKSAtIDE7XG5cbiAgY29uc3QgY29ycmVjdGVkSW5kZXggPVxuICAgIHByZXZpb3VzU2xpZGVJbmRleCA8IDBcbiAgICAgID8gZ2V0QWxsQ2Fyb3VzZWxTbGlkZUlkcygpLmxlbmd0aCAtIDFcbiAgICAgIDogcHJldmlvdXNTbGlkZUluZGV4O1xuXG4gIHJldHVybiBjb3JyZWN0ZWRJbmRleDtcbn1cblxuZnVuY3Rpb24gZ2V0TmV4dFNsaWRlSW5kZXgoKSB7XG4gIGxldCBuZXh0U2xpZGVJbmRleCA9IGdldEN1cnJlbnRTbGlkZUluZGV4KCkgKyAxO1xuICBjb25zdCBjb3JyZWN0ZWRJbmRleCA9XG4gICAgbmV4dFNsaWRlSW5kZXggPiBnZXRBbGxDYXJvdXNlbFNsaWRlSWRzKCkubGVuZ3RoIC0gMSA/IDAgOiBuZXh0U2xpZGVJbmRleDtcblxuICByZXR1cm4gY29ycmVjdGVkSW5kZXg7XG59XG5cbi8vIG1vdmUgdG8gdGhlIHNlbGVjdGVkIHNsaWRlXG5leHBvcnQgZnVuY3Rpb24gZ290b1NwZWNpZmljU2xpZGUoaWQpIHtcbiAgY29uc3QgYWxsTmF2QnV0dG9ucyA9IGdldEFsbENhcm91c2VsTmF2QnV0dG9ucygpO1xuICBjb25zdCBzZWxlY3RlZE5hdkJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGBjYXJvdXNlbC1uYXYtJHtpZH1gKTtcbiAgY29uc3Qgc2VsZWN0ZWRTbGlkZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGBjYXJvdXNlbC1zbGlkZS0ke2lkfWApO1xuICBjb25zdCBhbGxTbGlkZXMgPSBnZXRBbGxDYXJvdXNlbFNsaWRlcygpO1xuXG4gIGFsbFNsaWRlcy5mb3JFYWNoKChzbGlkZSkgPT4gc2xpZGUuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKSk7XG4gIHNlbGVjdGVkU2xpZGUuY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKTtcblxuICBhbGxOYXZCdXR0b25zLmZvckVhY2goKHNsaWRlKSA9PiBzbGlkZS5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpKTtcbiAgc2VsZWN0ZWROYXZCdXR0b24uY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKTtcbn1cblxuLy8gIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIEVWRU5UIEhBTkRMRVJTICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xuLy8gbW92ZSB0byB0aGUgc2VsZWN0ZWQgc2xpZGUgd2hlbiBjbGlja2luZyBvbiB0aGUgYXNzb2NpYXRlZCBuYXYgYnV0dG9uXG5leHBvcnQgZnVuY3Rpb24gY2xpY2tDYXJvdXNlbE5hdihpZCkge1xuICBnb3RvU3BlY2lmaWNTbGlkZShpZCk7XG59XG5cbi8vIG1vdmUgcmlnaHQgd2hlbiBjbGlja2luZyBvbiB0aGUgcmlnaHQgYnV0dG9uXG5leHBvcnQgZnVuY3Rpb24gY2xpY2tDYXJvdXNlbFJpZ2h0KCkge1xuICBjb25zdCBpZCA9IGdldEFsbENhcm91c2VsU2xpZGVJZHMoKVtnZXROZXh0U2xpZGVJbmRleCgpXS5yZXBsYWNlKFxuICAgIFwiY2Fyb3VzZWwtc2xpZGUtXCIsXG4gICAgXCJcIlxuICApO1xuICBjb25zb2xlLmxvZyhpZCk7XG4gIGdvdG9TcGVjaWZpY1NsaWRlKGlkKTtcbn1cblxuLy8gbW92ZSBsZWZ0IHdoZW4gY2xpY2tpbmcgb24gdGhlIHJpZ2h0IGJ1dHRvblxuZXhwb3J0IGZ1bmN0aW9uIGNsaWNrQ2Fyb3VzZWxMZWZ0KCkge1xuICBjb25zdCBpZCA9IGdldEFsbENhcm91c2VsU2xpZGVJZHMoKVtnZXRQcmV2aW91c1NsaWRlSW5kZXgoKV0ucmVwbGFjZShcbiAgICBcImNhcm91c2VsLXNsaWRlLVwiLFxuICAgIFwiXCJcbiAgKTtcbiAgY29uc29sZS5sb2coaWQpO1xuICBnb3RvU3BlY2lmaWNTbGlkZShpZCk7XG59XG4iLCIvLyBDT01QT05FTlQgSU1QT1JUU1xuaW1wb3J0IEVsZW1lbnQgZnJvbSBcIi4uL0VsZW1lbnRcIjtcbmltcG9ydCBOYXZMaW5rIGZyb20gXCIuL05hdkxpbmtcIjtcbmltcG9ydCBJY29uIGZyb20gXCIuLi9iYXNlLWVsZW1lbnRzL0ljb25cIjtcbi8vIExPR0lDIElNUE9SVFNcbi8vXG5cbi8vIENPTVBPTkVOVCBNRVRIT0RTXG4vLyBmdW5jdGlvbiBzb21lTWV0aG9kKCkge1xuLy8gICAvL1xuLy8gfVxuXG5jb25zdCBFeHBhbmRhYmxlTmF2TGluayA9IChwcm9wcykgPT4ge1xuICBjb25zdCBzdWJMaW5rT2JqZWN0cyA9IHByb3BzLnN1YkxpbmtPYmplY3RzID8gcHJvcHMuc3ViTGlua09iamVjdHMgOiBbXTtcblxuICBjb25zdCBpY29uID0gSWNvbihcImljb24tZ2l0aHViLWNhdCBtbC1oYWxmXCIpO1xuXG4gIGNvbnN0IGEgPSAoaW5uZXJUZXh0LCBocmVmLCBjbGFzc05hbWUpID0+XG4gICAgRWxlbWVudChcbiAgICAgIFwiYVwiLFxuICAgICAge1xuICAgICAgICBpbm5lclRleHQsXG4gICAgICAgIGhyZWYsXG4gICAgICAgIGNsYXNzTmFtZTogYCR7Y2xhc3NOYW1lID8gY2xhc3NOYW1lIDogXCJcIn1gLFxuICAgICAgfSxcbiAgICAgIGlubmVyVGV4dC50b0xvd2VyQ2FzZSgpID09PSBcImdpdGh1YiByZXBvXCIgPyBbaWNvbl0gOiBbXVxuICAgICk7XG5cbiAgY29uc3QgdG9wTGluayA9IEVsZW1lbnQoXG4gICAgXCJhXCIsXG4gICAge1xuICAgICAgaW5uZXJUZXh0OiBwcm9wcy5pbm5lclRleHQsXG4gICAgICBjbGFzc05hbWU6XG4gICAgICAgIFwidG9wLWxpbmsgcHQtMSBwci0yIHBiLTEgcGwtMSBiZy10cmFuc3BhcmVudCB0ZXh0LXdoaXRlIGJvcmRlci1ub25lIHRleHQtdXBwZXJjYXNlIGN1cnNvci1wb2ludGVyIFwiLFxuICAgIH0sXG4gICAgW11cbiAgKTtcblxuICBjb25zdCBsaW5rQ2xhc3NlcyA9IFwiYmctcHJpbWFyeS1saWdodC0xIGJnLWhvdmVyLXByaW1hcnktZGFyay0yXCI7XG4gIGNvbnN0IGRyb3BEb3duQ29udGVudCA9IEVsZW1lbnQoXG4gICAgXCJkaXZcIixcbiAgICB7IGNsYXNzTmFtZTogXCJkcm9wZG93bi1jb250ZW50XCIgfSxcbiAgICAvL2NoaWxkcmVuXG4gICAgWy4uLnN1YkxpbmtPYmplY3RzLm1hcCgob2JqKSA9PiBhKG9iai5pbm5lclRleHQsIG9iai5ocmVmLCBsaW5rQ2xhc3NlcykpXVxuICApO1xuXG4gIGNvbnN0IGV4cGFuZGFibGVOYXZMaW5rID0gRWxlbWVudChcbiAgICBcImRpdlwiLFxuICAgIHtcbiAgICAgIGNsYXNzTmFtZTpcbiAgICAgICAgXCJkcm9wZG93blwiICtcbiAgICAgICAgXCIgXCIgK1xuICAgICAgICBcImJnLXByaW1hcnktbGlnaHQtMSB0ZXh0LXVwcGVyY2FzZSBiZy1ob3Zlci1wcmltYXJ5LWRhcmstMiBjdXJzb3ItcG9pbnRlciBtci0xXCIsXG4gICAgfSxcbiAgICAvL2NoaWxkcmVuXG4gICAgW3RvcExpbmssIGRyb3BEb3duQ29udGVudF1cbiAgKTtcblxuICByZXR1cm4gZXhwYW5kYWJsZU5hdkxpbms7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBFeHBhbmRhYmxlTmF2TGluaztcbiIsIi8vIENPTVBPTkVOVCBJTVBPUlRTXG5pbXBvcnQgRWxlbWVudCBmcm9tIFwiLi4vRWxlbWVudFwiO1xuaW1wb3J0IEljb24gZnJvbSBcIi4uL2Jhc2UtZWxlbWVudHMvSWNvblwiO1xuLy8gTE9HSUMgSU1QT1JUU1xuXG5pbXBvcnQgdWkgZnJvbSBcIi4uLy4uL21hbmFnZXJzL3VpTWFuYWdlci91aU1hbmFnZXJcIjtcblxuLy8gQ09NUE9ORU5UIE1FVEhPRFNcbmZ1bmN0aW9uIHNvbWVNZXRob2QoKSB7XG4gIHVpLnRvZ2dsZU1vYmlsZU1lbnUoKTtcbn1cblxuY29uc3QgTWVudUNvbnRhaW5lciA9ICgpID0+IHtcbiAgY29uc3QgbWVudUljb24gPSBJY29uKFwiaWNvbi1oYW1idXJnZXItbWVudSB0ZXh0LXdoaXRlIGZvbnQtbGdcIik7XG4gIGNvbnN0IG1lbnVCdXR0b24gPSBFbGVtZW50KFxuICAgIFwiYnV0dG9uXCIsXG4gICAge1xuICAgICAgY2xhc3NOYW1lOiBgbWVudS1idXR0b24gbS0xIGJ0biBiZy10cmFuc3BhcmVudCBib3JkZXItbm9uZWAsXG4gICAgICBvbmNsaWNrOiBzb21lTWV0aG9kLFxuICAgIH0sXG4gICAgLy8gICBjaGlsZHJlblxuICAgIFttZW51SWNvbl1cbiAgKTtcblxuICBjb25zdCBjb250YWluZXIgPSBFbGVtZW50KFxuICAgIFwiZGl2XCIsXG4gICAge1xuICAgICAgY2xhc3NOYW1lOiBgY29udGFpbmVyYCxcbiAgICB9LFxuICAgIC8vIGNoaWxkcmVuXG4gICAgW21lbnVCdXR0b25dXG4gICk7XG4gIHJldHVybiBjb250YWluZXI7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBNZW51Q29udGFpbmVyO1xuIiwiLy8gQ09NUE9ORU5UIElNUE9SVFNcbmltcG9ydCBFbGVtZW50IGZyb20gXCIuLi9FbGVtZW50XCI7XG5pbXBvcnQgTmF2TGlua3MgZnJvbSBcIi4vTmF2TGlua3NcIjtcblxuLy8gTE9HSUMgSU1QT1JUU1xuLy9cblxuLy8gQ09NUE9ORU5UIE1FVEhPRFNcbi8vIGZ1bmN0aW9uIHNvbWVNZXRob2QoKSB7XG4vLyAgIC8vXG4vLyB9XG5cbmNvbnN0IE1vYmlsZU1lbnUgPSAoKSA9PiB7XG4gIGNvbnN0IG1lbnUgPSBFbGVtZW50KFxuICAgIFwiZGl2XCIsXG4gICAge1xuICAgICAgaWQ6IGBgLFxuICAgICAgY2xhc3NOYW1lOiBgbW9iaWxlLW1lbnVgLFxuICAgIH0sXG4gICAgLy8gY2hpbGRyZW5cbiAgICBbTmF2TGlua3ModHJ1ZSldXG4gICk7XG4gIHJldHVybiBtZW51O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgTW9iaWxlTWVudTtcbiIsIi8vIENPTVBPTkVOVCBJTVBPUlRTXG5pbXBvcnQgRWxlbWVudCBmcm9tIFwiLi4vRWxlbWVudFwiO1xuaW1wb3J0IE5hdkxpbmtzIGZyb20gXCIuL05hdkxpbmtzXCI7XG5pbXBvcnQgTWVudUNvbnRhaW5lciBmcm9tIFwiLi9NZW51QnV0dG9uXCI7XG5pbXBvcnQgTW9iaWxlTWVudSBmcm9tIFwiLi9Nb2JpbGVNZW51XCI7XG5cbi8vIExPR0lDIElNUE9SVFNcbi8vXG5cbi8vIENPTVBPTkVOVCBNRVRIT0RTXG4vLyBmdW5jdGlvbiBzb21lTWV0aG9kKCkge1xuLy8gICAvL1xuLy8gfVxuXG5jb25zdCBOYXZCYXIgPSAoKSA9PiB7XG4gIGNvbnN0IHNpdGVIZWFkZXIgPSBFbGVtZW50KFwiaDJcIiwge1xuICAgIGNsYXNzTmFtZTogXCJ0ZXh0LWxnXCIsXG4gICAgaW5uZXJUZXh0OiBcIk5hdmJhci5jb21cIixcbiAgfSk7XG5cbiAgY29uc3QgdGFnbGluZSA9IEVsZW1lbnQoXCJwXCIsIHtcbiAgICBjbGFzc05hbWU6IGBgLFxuICAgIGlubmVyVGV4dDogXCJJIG1hZGUgdGhpcyBteXNlbGZcIixcbiAgfSk7XG5cbiAgY29uc3QgQ29udGFpbmVyID0gKGNsYXNzU3RyaW5nLCBjaGlsZHJlbikgPT5cbiAgICBFbGVtZW50KFxuICAgICAgXCJkaXZcIixcbiAgICAgIHsgY2xhc3NOYW1lOiBgJHtjbGFzc1N0cmluZ30gY29udGFpbmVyYCB9LFxuICAgICAgLy8gY29udGFpbmVyIGNoaWxkcmVuXG4gICAgICBbLi4uY2hpbGRyZW5dXG4gICAgKTtcblxuICBjb25zdCBuYXYgPSBFbGVtZW50KFxuICAgIFwibmF2XCIsXG4gICAge1xuICAgICAgY2xhc3NOYW1lOiBgY29udGFpbmVyIGJnLXByaW1hcnkgZmxleC1jb2x1bW4gbmF2YmFyYCxcbiAgICB9LFxuICAgIC8vIG5hdiBjaGlsZHJlblxuICAgIFtcbiAgICAgIENvbnRhaW5lcihcInAtMSBmbGV4LXdyYXBcIiwgW3NpdGVIZWFkZXIsIHRhZ2xpbmVdKSxcbiAgICAgIENvbnRhaW5lcihcIm5hdi1saW5rc1wiLCBbTmF2TGlua3MoKV0pLFxuICAgICAgQ29udGFpbmVyKFwiXCIsIFtNZW51Q29udGFpbmVyKCldKSxcbiAgICBdXG4gICk7XG5cbiAgY29uc3QgbmF2V3JhcHBlciA9IEVsZW1lbnQoXG4gICAgXCJkaXZcIixcbiAgICB7IGNsYXNzTmFtZTogYG5hdi13cmFwcGVyIHRleHQtd2hpdGVgIH0sXG4gICAgLy8gY2hpbGRyZW5cbiAgICBbbmF2LCBNb2JpbGVNZW51KCldXG4gICk7XG5cbiAgcmV0dXJuIG5hdldyYXBwZXI7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBOYXZCYXI7XG4iLCIvLyBDT01QT05FTlQgSU1QT1JUU1xuaW1wb3J0IEVsZW1lbnQgZnJvbSBcIi4uL0VsZW1lbnRcIjtcblxuLy8gTE9HSUMgSU1QT1JUU1xuLy9cblxuLy8gQ09NUE9ORU5UIE1FVEhPRFNcbi8vIGZ1bmN0aW9uIHNvbWVNZXRob2QoKSB7XG4vLyAgIC8vXG4vLyB9XG5cbmNvbnN0IE5hdkxpbmsgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgeyBpbm5lclRleHQgfSA9IHByb3BzO1xuICBjb25zdCB7IGhyZWYgfSA9IHByb3BzO1xuICBjb25zdCBhID0gKGlubmVyVGV4dCwgaHJlZiwgY2xhc3NOYW1lKSA9PlxuICAgIEVsZW1lbnQoXCJhXCIsIHsgaW5uZXJUZXh0LCBocmVmLCBjbGFzc05hbWU6IGBgIH0pO1xuXG4gIGNvbnN0IG5hdkxpbmsgPSBFbGVtZW50KFxuICAgIFwiZGl2XCIsXG4gICAge1xuICAgICAgaWQ6IGBgLFxuICAgICAgY2xhc3NOYW1lOiBgYmctcHJpbWFyeS1saWdodC0xIHAtMSB0ZXh0LXVwcGVyY2FzZSBiZy1ob3Zlci1wcmltYXJ5LWRhcmstMiBjdXJzb3ItcG9pbnRlciBtci0xYCxcbiAgICB9LFxuICAgIC8vIGNoaWxkcmVuXG4gICAgW2EoaW5uZXJUZXh0LCBocmVmKV1cbiAgKTtcbiAgcmV0dXJuIG5hdkxpbms7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBOYXZMaW5rO1xuIiwiLy8gQ09NUE9ORU5UIElNUE9SVFNcbmltcG9ydCBFbGVtZW50IGZyb20gXCIuLi9FbGVtZW50XCI7XG5pbXBvcnQgTmF2TGluayBmcm9tIFwiLi9OYXZMaW5rXCI7XG5pbXBvcnQgRXhwYW5kYWJsZU5hdkxpbmsgZnJvbSBcIi4vRXhwYW5kYWJsZU5hdkxpbmtcIjtcblxuLy8gTE9HSUMgSU1QT1JUU1xuaW1wb3J0IHsgbmF2TGlua0VsZW1lbnRJbmZvIH0gZnJvbSBcIi4uLy4uL21hbmFnZXJzL2RhdGFNYW5hZ2Vycy9uYXZMaW5rRGF0YVwiO1xuXG4vLyBDT01QT05FTlQgTUVUSE9EU1xuLy8gZnVuY3Rpb24gc29tZU1ldGhvZCgpIHtcbi8vICAgLy9cbi8vIH1cblxuY29uc3QgTmF2TGlua3MgPSAoaXNNb2JpbGVNZW51KSA9PiB7XG4gIGlzTW9iaWxlTWVudSA9IGlzTW9iaWxlTWVudSA/IHRydWUgOiBmYWxzZTtcbiAgY29uc3QgbmF2TGlua3MgPSBFbGVtZW50KFxuICAgIFwidWxcIixcbiAgICB7XG4gICAgICBjbGFzc05hbWU6IGBjb250YWluZXIgbmF2LWxpbmtzYCxcbiAgICB9LFxuICAgIC8vIGNoaWxkcmVuXG4gICAgbmF2TGlua0VsZW1lbnRJbmZvLm1hcCgob2JqKSA9PlxuICAgICAgb2JqLnN1YkxpbmtPYmplY3RzICYmICFpc01vYmlsZU1lbnVcbiAgICAgICAgPyBFeHBhbmRhYmxlTmF2TGluayhvYmopXG4gICAgICAgIDogTmF2TGluayhvYmopXG4gICAgKVxuICApO1xuICByZXR1cm4gbmF2TGlua3M7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBOYXZMaW5rcztcbiIsIi8vIENPTVBPTkVOVCBJTVBPUlRTXG5pbXBvcnQgRWxlbWVudCBmcm9tIFwiLi4vRWxlbWVudFwiO1xuXG4vLyBMT0dJQyBJTVBPUlRTXG4vL1xuXG4vLyBDT01QT05FTlQgTUVUSE9EU1xuLy8gZnVuY3Rpb24gc29tZU1ldGhvZCgpIHtcbi8vICAgLy9cbi8vIH1cblxuY29uc3QgSWNvbiA9IChpY29uQ2xhc3MpID0+IHtcbiAgY29uc3QgaWNvbiA9IEVsZW1lbnQoXCJpXCIsIHsgY2xhc3NOYW1lOiBgaWNvbiAke2ljb25DbGFzc30gZGlzcGxheS1pLWJgIH0pO1xuICByZXR1cm4gaWNvbjtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEljb247XG4iLCIvLyBDT01QT05FTlQgSU1QT1JUU1xuaW1wb3J0IEVsZW1lbnQgZnJvbSBcIi4uL0VsZW1lbnRcIjtcblxuLy8gTE9HSUMgSU1QT1JUU1xuLy9cblxuLy8gQ09NUE9ORU5UIE1FVEhPRFNcbi8vIGZ1bmN0aW9uIHNvbWVNZXRob2QoKSB7XG4vLyAgIC8vXG4vLyB9XG5cbmNvbnN0IEltYWdlID0gKHNyYykgPT4ge1xuICBjb25zdCBpbWcgPSBFbGVtZW50KFwiaW1nXCIsIHtcbiAgICBzcmMsXG4gIH0pO1xuICByZXR1cm4gaW1nO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgSW1hZ2U7XG4iLCJleHBvcnQgY29uc3QgbmF2TGlua0VsZW1lbnRJbmZvID0gW1xuICB7XG4gICAgaW5uZXJUZXh0OiBcImNvbnRhY3RcIixcbiAgICBocmVmOiBcIiNcIixcbiAgICBzdWJMaW5rT2JqZWN0czogW1xuICAgICAge1xuICAgICAgICBpbm5lclRleHQ6IFwiR2l0aHViIFJlcG9cIixcbiAgICAgICAgaHJlZjogXCJodHRwczovL2dpdGh1Yi5jb20vY2FybGluLW1pdGNoZWxsL2N1c3RvbS1jb21wb25lbnRzLWpzXCIsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbm5lclRleHQ6IFwiR2l0aHViIExpdmVcIixcbiAgICAgICAgaHJlZjogXCJodHRwczovL2Nhcmxpbi1taXRjaGVsbC5naXRodWIuaW8vY3VzdG9tLWNvbXBvbmVudHMtanMvXCIsXG4gICAgICB9LFxuICAgICAgeyBpbm5lclRleHQ6IFwiU3ViIExpbmsgM1wiLCBocmVmOiBcIiNcIiB9LFxuICAgICAgeyBpbm5lclRleHQ6IFwiU3ViIExpbmsgNFwiLCBocmVmOiBcIiNcIiB9LFxuICAgIF0sXG4gIH0sXG4gIHtcbiAgICBpbm5lclRleHQ6IFwiYWJvdXRcIixcbiAgICBocmVmOiBcIiNcIixcbiAgfSxcbiAge1xuICAgIGlubmVyVGV4dDogXCJwcmljaW5nXCIsXG4gICAgaHJlZjogXCIjXCIsXG4gIH0sXG4gIHtcbiAgICBpbm5lclRleHQ6IFwibGlua3NcIixcbiAgICBocmVmOiBcIiNcIixcbiAgICBzdWJMaW5rT2JqZWN0czogW1xuICAgICAgeyBpbm5lclRleHQ6IFwiU3ViIExpbmsgMVwiLCBocmVmOiBcIiNcIiB9LFxuICAgICAgeyBpbm5lclRleHQ6IFwiU3ViIExpbmsgMlwiLCBocmVmOiBcIiNcIiB9LFxuICAgICAgeyBpbm5lclRleHQ6IFwiU3ViIExpbmsgM1wiLCBocmVmOiBcIiNcIiB9LFxuICAgICAgeyBpbm5lclRleHQ6IFwiU3ViIExpbmsgNFwiLCBocmVmOiBcIiNcIiB9LFxuICAgIF0sXG4gIH0sXG4gIHtcbiAgICBpbm5lclRleHQ6IFwiZXZlbnRzXCIsXG4gICAgaHJlZjogXCIjXCIsXG4gICAgc3ViTGlua09iamVjdHM6IFtcbiAgICAgIHsgaW5uZXJUZXh0OiBcIlN1YiBMaW5rIDFcIiwgaHJlZjogXCIjXCIgfSxcbiAgICAgIHsgaW5uZXJUZXh0OiBcIlN1YiBMaW5rIDJcIiwgaHJlZjogXCIjXCIgfSxcbiAgICAgIHsgaW5uZXJUZXh0OiBcIlN1YiBMaW5rIDNcIiwgaHJlZjogXCIjXCIgfSxcbiAgICAgIHsgaW5uZXJUZXh0OiBcIlN1YiBMaW5rIDRcIiwgaHJlZjogXCIjXCIgfSxcbiAgICBdLFxuICB9LFxuXTtcbiIsImV4cG9ydCBmdW5jdGlvbiB0b2dnbGVNb2JpbGVNZW51KCkge1xuICBjb25zdCBtb2JpbGVNZW51ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2JpbGUtbWVudVwiKTtcbiAgaWYgKG1vYmlsZU1lbnUuY2xhc3NMaXN0LmNvbnRhaW5zKFwibWVudS1kb3duXCIpKSB7XG4gICAgbW9iaWxlTWVudVVwKCk7XG4gIH0gZWxzZSB7XG4gICAgbW9iaWxlTWVudURvd24oKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gbW9iaWxlTWVudVVwKCkge1xuICBjb25zdCBtb2JpbGVNZW51ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2JpbGUtbWVudVwiKTtcbiAgbW9iaWxlTWVudS5jbGFzc0xpc3QucmVtb3ZlKFwibWVudS1kb3duXCIpO1xuICBtb2JpbGVNZW51LmNsYXNzTGlzdC5hZGQoXCJtZW51LXVwXCIpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbW9iaWxlTWVudURvd24oKSB7XG4gIGNvbnN0IG1vYmlsZU1lbnUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vYmlsZS1tZW51XCIpO1xuICBtb2JpbGVNZW51LmNsYXNzTGlzdC5yZW1vdmUoXCJtZW51LXVwXCIpO1xuICBtb2JpbGVNZW51LmNsYXNzTGlzdC5hZGQoXCJtZW51LWRvd25cIik7XG59XG4iLCIvLyBtb2JpbGUgbWVudSBpbXBvcnRzXG5pbXBvcnQgeyBtb2JpbGVNZW51VXAgfSBmcm9tIFwiLi9tb2JpbGVNZW51LXVpXCI7XG4vLyBpbXBvcnQgeyBtb2JpbGVNZW51RG93biB9IGZyb20gXCIuL21vYmlsZU1lbnUtdWlcIjtcbmltcG9ydCB7IHRvZ2dsZU1vYmlsZU1lbnUgfSBmcm9tIFwiLi9tb2JpbGVNZW51LXVpXCI7XG5cbmNvbnN0IHVpTWFuYWdlciA9IHtcbiAgdG9nZ2xlTW9iaWxlTWVudSxcbiAgbW9iaWxlTWVudVVwLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgdWlNYW5hZ2VyO1xuIiwiaW1wb3J0IHsgbW9iaWxlTWVudVVwIH0gZnJvbSBcIi4vbW9iaWxlTWVudS11aVwiO1xuaW1wb3J0IHsgZGVib3VuY2UgfSBmcm9tIFwiLi4vLi4vdXRpbHNcIjtcbmltcG9ydCB7IGdldENhcm91c2VsU2xpZGVzIH0gZnJvbSBcIi4uLy4uL2NvbXBvbmVudHMvSW1hZ2VDYXJvdXNlbC91aS9jYXJvdXNlbC11aVwiO1xuXG5jb25zdCBicmVha1BvaW50cyA9IHtcbiAgeHM6IDAsXG4gIHNtOiA0ODAsXG4gIG1kOiA3MjAsXG4gIGxnOiA5NjAsXG4gIHhsOiAxMjAwLFxufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGFwcGx5V2luZG93TGlzdGVuZXJzKCkge1xuICB3aW5kb3cub25yZXNpemUgPSBkZWJvdW5jZShmdW5jdGlvbiAoZSkge1xuICAgIGNvbnN0IHsgaW5uZXJXaWR0aCB9ID0gZS50YXJnZXQ7XG5cbiAgICBpZiAoaW5uZXJXaWR0aCA+PSBicmVha1BvaW50cy5tZCkge1xuICAgICAgY29uc3QgbW9iaWxlTWVudSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9iaWxlLW1lbnVcIik7XG4gICAgICBpZiAobW9iaWxlTWVudS5jbGFzc0xpc3QuY29udGFpbnMoXCJtZW51LWRvd25cIikpIHtcbiAgICAgICAgbW9iaWxlTWVudVVwKCk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbn1cbiIsImV4cG9ydCBjb25zdCB0cnVuY2F0ZUFuZEFkZEVsbGlwc2UgPSAoc3RyaW5nLCBudW1DaGFyc1RvS2VlcCkgPT4ge1xuICByZXR1cm4gc3RyaW5nLnNsaWNlKDAsIG51bUNoYXJzVG9LZWVwKS50cmltRW5kKCkgKyBcIi4uLlwiO1xufTtcblxuZXhwb3J0IGNvbnN0IGRlYm91bmNlID0gZnVuY3Rpb24gKGZuKSB7XG4gIC8vIHNldHVwIGEgdGltZXJcbiAgbGV0IHRpbWVvdXQ7XG5cbiAgLy8gcmV0dXJuIGEgZnVuY3Rpb24gdG8gcnVuIGRlYm91bmNlZFxuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIC8vc2V0dXAgYXJnc1xuXG4gICAgbGV0IGNvbnRleHQgPSB0aGlzO1xuICAgIGxldCBhcmdzID0gYXJndW1lbnRzO1xuXG4gICAgLy8gaWYgdGhlcmUgaXMgYSB0aW1lciBjYW5jZWwgaXRcbiAgICBpZiAodGltZW91dCkge1xuICAgICAgd2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lKHRpbWVvdXQpO1xuICAgIH1cblxuICAgIC8vIHNldHVwIHRoZSBuZXcgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKClcbiAgICB0aW1lb3V0ID0gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbiAoKSB7XG4gICAgICBmbi5hcHBseShjb250ZXh0LCBhcmdzKTtcbiAgICB9KTtcbiAgfTtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBjYXBpdGFsaXplKHN0cmluZykge1xuICBpZiAoc3RyaW5nKSB7XG4gICAgcmV0dXJuIHN0cmluZ1swXS50b1VwcGVyQ2FzZSgpICsgc3RyaW5nLnNsaWNlKDEpLnRvTG93ZXJDYXNlKCk7XG4gIH1cbiAgcmV0dXJuIHN0cmluZztcbn1cbiIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCIvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSAoZXhwb3J0cykgPT4ge1xuXHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblx0fVxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xufTsiLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmM7XG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkge1xuXHRcdFx0dmFyIGkgPSBzY3JpcHRzLmxlbmd0aCAtIDE7XG5cdFx0XHR3aGlsZSAoaSA+IC0xICYmICFzY3JpcHRVcmwpIHNjcmlwdFVybCA9IHNjcmlwdHNbaS0tXS5zcmM7XG5cdFx0fVxuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCJpbXBvcnQgXCIuL3N0eWxlcy9pbmRleC5zY3NzXCI7XG5pbXBvcnQgQ29udGVudCBmcm9tIFwiLi9jb21wb25lbnRzL0NvbnRlbnQvQ29udGVudFwiO1xuXG5pbXBvcnQgeyBhcHBseVdpbmRvd0xpc3RlbmVycyB9IGZyb20gXCIuL21hbmFnZXJzL3VpTWFuYWdlci93aW5kb3dFdmVudExpc3RlbmVyc1wiO1xuXG5jb25zdCBkZWJ1Z2dpbmcgPSB0cnVlO1xuXG5kb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKENvbnRlbnQoKSk7XG5kb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5hZGQoXCJwLTJcIik7XG5cbmFwcGx5V2luZG93TGlzdGVuZXJzKCk7XG5cbi8vIGRlYnVnZ2luZ1xuaWYgKGRlYnVnZ2luZykge1xuICAvL1xufVxuIl0sIm5hbWVzIjpbInJhbmRvbVVVSUQiLCJjcnlwdG8iLCJiaW5kIiwiZ2V0UmFuZG9tVmFsdWVzIiwicm5kczgiLCJVaW50OEFycmF5Iiwicm5nIiwiRXJyb3IiLCJieXRlVG9IZXgiLCJpIiwicHVzaCIsInRvU3RyaW5nIiwic2xpY2UiLCJ1bnNhZmVTdHJpbmdpZnkiLCJhcnIiLCJvZmZzZXQiLCJ0b0xvd2VyQ2FzZSIsInV1aWQiLCJUeXBlRXJyb3IiLCJvcHRpb25zIiwiYnVmIiwicm5kcyIsInJhbmRvbSIsInRlc3QiLCJoZWFkZXJUZXh0IiwiY29tcG9uZW50IiwiYWRkSHIiLCJoZWFkZXIiLCJjbGFzc05hbWUiLCJpbm5lclRleHQiLCJockRpdiIsInNlY3Rpb24iLCJhcHBlbmRDaGlsZCIsImNvbnRlbnQiLCJpZCIsInR5cGVTdHIiLCJwcm9wc09iaiIsImNoaWxkQXJyIiwiQXJyYXkiLCJpc0FycmF5IiwicGFyZW50RWxlbWVudCIsIk9iamVjdCIsImFzc2lnbiIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImZvckVhY2giLCJjaGlsZCIsImltYWdlRGF0YSIsIm1hcCIsIm9iaiIsImluZGV4IiwiY2Fyb3VzZWxOYXZJbmRpY2F0b3IiLCJpbWFnZUlkIiwic3RhcnRzQWN0aXZlIiwiaXNBY3RpdmUiLCJvbmNsaWNrIiwiY2xpY2tDYXJvdXNlbE5hdiIsImltYWdlU291cmNlIiwiY2Fyb3VzZWxJbWFnZSIsInNyYyIsInNoYXJlZEJ1dHRvbkNsYXNzZXMiLCJsZWZ0QnV0dG9uIiwicmlnaHRCdXR0b24iLCJmaWxsIiwiZWxlbSIsInNoYXJlZENsYXNzZXMiLCJpY29uIiwiY2xpY2tDYXJvdXNlbExlZnQiLCJjbGlja0Nhcm91c2VsUmlnaHQiLCJnZXRBbGxDYXJvdXNlbFNsaWRlcyIsInF1ZXJ5U2VsZWN0b3IiLCJjaGlsZE5vZGVzIiwiZ2V0QWxsQ2Fyb3VzZWxTbGlkZUlkcyIsImdldEN1cnJlbnRTbGlkZUluZGV4IiwiYWxsU2xpZGVJZHMiLCJjdXJyZW50U2xpZGVJZCIsImluZGV4T2YiLCJnb3RvU3BlY2lmaWNTbGlkZSIsImFsbE5hdkJ1dHRvbnMiLCJxdWVyeVNlbGVjdG9yQWxsIiwic2VsZWN0ZWROYXZCdXR0b24iLCJnZXRFbGVtZW50QnlJZCIsInNlbGVjdGVkU2xpZGUiLCJzbGlkZSIsImNsYXNzTGlzdCIsInJlbW92ZSIsImFkZCIsIm5leHRTbGlkZUluZGV4IiwibGVuZ3RoIiwiZ2V0TmV4dFNsaWRlSW5kZXgiLCJyZXBsYWNlIiwiY29uc29sZSIsImxvZyIsInByZXZpb3VzU2xpZGVJbmRleCIsImdldFByZXZpb3VzU2xpZGVJbmRleCIsInByb3BzIiwic3ViTGlua09iamVjdHMiLCJ0b3BMaW5rIiwiZHJvcERvd25Db250ZW50IiwiYSIsImhyZWYiLCJzb21lTWV0aG9kIiwidG9nZ2xlTW9iaWxlTWVudSIsIm1lbnVJY29uIiwibWVudUJ1dHRvbiIsInNpdGVIZWFkZXIiLCJ0YWdsaW5lIiwiQ29udGFpbmVyIiwiY2xhc3NTdHJpbmciLCJjaGlsZHJlbiIsIm5hdiIsIm5hdkxpbmsiLCJpc01vYmlsZU1lbnUiLCJuYXZMaW5rRWxlbWVudEluZm8iLCJpY29uQ2xhc3MiLCJjb250YWlucyIsIm1vYmlsZU1lbnVVcCIsIm1vYmlsZU1lbnVEb3duIiwibW9iaWxlTWVudSIsImJyZWFrUG9pbnRzIiwieHMiLCJzbSIsIm1kIiwibGciLCJ4bCIsImFwcGx5V2luZG93TGlzdGVuZXJzIiwid2luZG93Iiwib25yZXNpemUiLCJkZWJvdW5jZSIsImUiLCJpbm5lcldpZHRoIiwidGFyZ2V0IiwidHJ1bmNhdGVBbmRBZGRFbGxpcHNlIiwic3RyaW5nIiwibnVtQ2hhcnNUb0tlZXAiLCJ0cmltRW5kIiwiZm4iLCJ0aW1lb3V0IiwiY29udGV4dCIsInRoaXMiLCJhcmdzIiwiYXJndW1lbnRzIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJhcHBseSIsImNhcGl0YWxpemUiLCJ0b1VwcGVyQ2FzZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsInVuZGVmaW5lZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwiZCIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInNjcmlwdFVybCIsImltcG9ydFNjcmlwdHMiLCJsb2NhdGlvbiIsImN1cnJlbnRTY3JpcHQiLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJwIiwiYm9keSJdLCJzb3VyY2VSb290IjoiIn0=