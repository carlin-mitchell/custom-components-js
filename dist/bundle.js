/*! For license information please see bundle.js.LICENSE.txt */
(()=>{"use strict";var e={"./src/styles/index.scss":(e,n,s)=>{s.r(n)},"./node_modules/uuid/dist/esm-browser/native.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>t});const t={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)}},"./node_modules/uuid/dist/esm-browser/regex.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>t});const t=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i},"./node_modules/uuid/dist/esm-browser/rng.js":(e,n,s)=>{let t;s.r(n),s.d(n,{default:()=>r});const a=new Uint8Array(16);function r(){if(!t&&(t="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!t))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return t(a)}},"./node_modules/uuid/dist/esm-browser/stringify.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>o,unsafeStringify:()=>r});var t=s("./node_modules/uuid/dist/esm-browser/validate.js");const a=[];for(let e=0;e<256;++e)a.push((e+256).toString(16).slice(1));function r(e,n=0){return(a[e[n+0]]+a[e[n+1]]+a[e[n+2]]+a[e[n+3]]+"-"+a[e[n+4]]+a[e[n+5]]+"-"+a[e[n+6]]+a[e[n+7]]+"-"+a[e[n+8]]+a[e[n+9]]+"-"+a[e[n+10]]+a[e[n+11]]+a[e[n+12]]+a[e[n+13]]+a[e[n+14]]+a[e[n+15]]).toLowerCase()}const o=function(e,n=0){const s=r(e,n);if(!(0,t.default)(s))throw TypeError("Stringified UUID is invalid");return s}},"./node_modules/uuid/dist/esm-browser/v4.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>o});var t=s("./node_modules/uuid/dist/esm-browser/native.js"),a=s("./node_modules/uuid/dist/esm-browser/rng.js"),r=s("./node_modules/uuid/dist/esm-browser/stringify.js");const o=function(e,n,s){if(t.default.randomUUID&&!n&&!e)return t.default.randomUUID();const o=(e=e||{}).random||(e.rng||a.default)();if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,n){s=s||0;for(let e=0;e<16;++e)n[s+e]=o[e];return n}return(0,r.unsafeStringify)(o)}},"./node_modules/uuid/dist/esm-browser/validate.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});var t=s("./node_modules/uuid/dist/esm-browser/regex.js");const a=function(e){return"string"==typeof e&&t.default.test(e)}},"./src/components/ComponentSection/ComponentSection.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});var t=s("./src/components/Element.js");const a=(e,n,s=!1)=>{const a=(0,t.default)("h2",{className:"mb-2",innerText:e});n=(0,t.default)("div",{className:"component-body"},[n]);const r=(0,t.default)("div",{className:"p-1 hr-div "},[(0,t.default)("hr")]),o=(0,t.default)("div",{className:"component-section"});return o.appendChild(a),n&&o.appendChild(n),s&&n.appendChild(r),o}},"./src/components/Content/Content.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>c});var t=s("./src/components/Element.js"),a=s("./src/components/ComponentSection/ComponentSection.js"),r=s("./src/components/NavBar/NabBar.js"),o=s("./src/components/ImageCarousel/ImageCarousel.js");s("./src/components/base-elements/Icon.js");const c=()=>{const e=(0,t.default)("div",{id:"content"});return e.appendChild((0,a.default)("Navbar With Dropdown",(0,r.default)(),!0)),e.appendChild((0,a.default)("Image Carousel",(0,o.default)(),!0)),e}},"./src/components/Element.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>t});const t=(e,n,s=null)=>{s&&!Array.isArray(s)&&(s=[s]);const t=Object.assign(document.createElement(e),n);return s&&s.forEach((e=>t.appendChild(e))),t}},"./src/components/ImageCarousel/CarouselNav.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>o});var t=s("./src/components/Element.js"),a=s("./src/components/ImageCarousel/ui/carousel-ui.js"),r=s("./src/components/ImageCarousel/playAndPauseButtons.js");const o=e=>{const n=(0,t.default)("div",{className:"carousel-play-pause-container"},[r.PauseButton,r.PlayButton]);return(0,t.default)("div",{id:"",className:"carousel-nav pt-1"},[n,...e.map(((e,n)=>{return s=e.uuid,r=!!e.isActive,(0,t.default)("button",{id:`carousel-nav-${s}`,className:"carousel-indicator display-i-b bg-gray-light-6 "+(r?"active":""),onclick:function(){(0,a.clickCarouselNav)(s)}});var s,r}))])}},"./src/components/ImageCarousel/CarouselSlide.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});var t=s("./src/components/Element.js");s("./src/components/base-elements/Image.js");const a=(e,n,s)=>{const a=(0,t.default)("img",{src:e,className:"carousel-image"});return(0,t.default)("div",{id:"carousel-slide-"+n,className:"carousel-slide "+(s?"active":"")},[a])}},"./src/components/ImageCarousel/CarouselTrack.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>r});var t=s("./src/components/Element.js"),a=s("./src/components/ImageCarousel/CarouselSlide.js");s("./src/components/ImageCarousel/assets/brick.png"),s("./src/components/ImageCarousel/assets/paint-face.png"),s("./src/components/ImageCarousel/assets/mac.png");const r=e=>(0,t.default)("ul",{id:"",className:"carousel-track"},[...e.map(((e,n)=>(0,a.default)(e.src,e.uuid,!!e.isActive)))])},"./src/components/ImageCarousel/CarouselTrackContainer.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>r});var t=s("./src/components/Element.js"),a=s("./src/components/ImageCarousel/CarouselTrack.js");const r=e=>(0,t.default)("div",{id:"",className:"carousel-track-container"},[(0,a.default)(e)])},"./src/components/ImageCarousel/ImageCarousel.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>l});var t=s("./src/components/Element.js"),a=s("./src/components/ImageCarousel/LeftButton.js"),r=s("./src/components/ImageCarousel/RightButton.js"),o=s("./src/components/ImageCarousel/CarouselTrackContainer.js"),c=s("./src/components/ImageCarousel/CarouselNav.js"),u=s("./node_modules/uuid/dist/esm-browser/v4.js"),i=s("./src/components/ImageCarousel/data/imageLoader.js");const l=()=>{const e="bg-transparent border-none p-1",n=(0,a.default)(e),s=(0,r.default)(e);return Array(4).fill(null).map((e=>(0,u.default)())),(0,t.default)("div",{id:"",className:"carousel pt-1 pb-1"},[n,(0,o.default)(i.imageData),s,(0,c.default)(i.imageData)])}},"./src/components/ImageCarousel/LeftButton.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>o});var t=s("./src/components/Element.js"),a=s("./src/components/base-elements/Icon.js"),r=s("./src/components/ImageCarousel/ui/carousel-ui.js");const o=e=>{const n=(0,a.default)("icon-up-arrow rotate-270 ");return(0,t.default)("button",{id:"",className:"carousel-button left "+e,onclick(){(0,r.clickCarouselLeft)()}},[n])}},"./src/components/ImageCarousel/RightButton.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>o});var t=s("./src/components/Element.js"),a=s("./src/components/base-elements/Icon.js"),r=s("./src/components/ImageCarousel/ui/carousel-ui.js");const o=e=>{const n=(0,a.default)("icon-up-arrow rotate-90");return(0,t.default)("button",{id:"",className:"carousel-button right "+e,onclick(){(0,r.clickCarouselRight)()}},[n])}},"./src/components/ImageCarousel/data/imageLoader.js":(e,n,s)=>{s.r(n),s.d(n,{imageData:()=>a});var t=s("./node_modules/uuid/dist/esm-browser/v4.js");const a=[{src:s("./src/components/ImageCarousel/assets/brick.png"),isActive:!0},{src:s("./src/components/ImageCarousel/assets/paint-face.png")},{src:s("./src/components/ImageCarousel/assets/mac.png")},{src:s("./src/components/ImageCarousel/assets/computer.png")},{src:s("./src/components/ImageCarousel/assets/webdev.png")}].map((e=>({...e,uuid:(0,t.default)()})))},"./src/components/ImageCarousel/playAndPauseButtons.js":(e,n,s)=>{s.r(n),s.d(n,{PauseButton:()=>c,PlayButton:()=>o});var t=s("./src/components/Element.js"),a=s("./src/components/base-elements/Icon.js"),r=s("./src/components/ImageCarousel/ui/carousel-ui.js");const o=(0,t.default)("button",{className:"play-button visible",onclick(){(0,r.clickCarouselPlay)()}},[(0,a.default)("icon-triangle rotate-90 font-sm text-gray-dark-4")]),c=(0,t.default)("button",{className:"pause-button",onclick(){(0,r.clickCarouselPause)()}},[(0,a.default)("icon-pause font-sm text-gray-dark-4")])},"./src/components/ImageCarousel/ui/carousel-ui.js":(e,n,s)=>{function t(){return[...document.querySelector(".carousel-track").childNodes]}function a(){return t().map((e=>e.id))}function r(){const e=a(),n=document.querySelector(".carousel-slide.active").id;return e.indexOf(n)}function o(e){const n=[...document.querySelectorAll(".carousel-indicator")],s=document.getElementById(`carousel-nav-${e}`),a=document.getElementById(`carousel-slide-${e}`);t().forEach((e=>e.classList.remove("active"))),a.classList.add("active"),n.forEach((e=>e.classList.remove("active"))),s.classList.add("active")}function c(e){o(e)}function u(){o(a()[function(){let e=r()+1;return e>a().length-1?0:e}()].replace("carousel-slide-",""))}function i(){o(a()[function(){let e=r()-1;return e<0?a().length-1:e}()].replace("carousel-slide-",""))}function l(){const e=getCarouselAutoAdvance();setCarouselAutoAdvance(!e)}function d(){f("play"),document.querySelector(".carousel .play-button").classList.toggle("visible"),document.querySelector(".carousel .pause-button").classList.toggle("visible")}function m(){f("pause"),document.querySelector(".carousel .play-button").classList.toggle("visible"),document.querySelector(".carousel .pause-button").classList.toggle("visible")}let p;function f(e){"play"===e?p=window.setInterval(u,5e3):window.clearInterval(p)}s.r(n),s.d(n,{clickCarouselLeft:()=>i,clickCarouselNav:()=>c,clickCarouselPause:()=>m,clickCarouselPlay:()=>d,clickCarouselRight:()=>u,gotoSpecificSlide:()=>o,handleAutoAdvance:()=>f,togglePalyPause:()=>l})},"./src/components/NavBar/ExpandableNavLink.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>r});var t=s("./src/components/Element.js"),a=s("./src/components/base-elements/Icon.js");const r=e=>{const n=e.subLinkObjects?e.subLinkObjects:[],s=(0,a.default)("icon-github-cat ml-half"),r=(0,t.default)("a",{innerText:e.innerText,className:"top-link pt-1 pr-2 pb-1 pl-1 bg-transparent text-white border-none text-uppercase cursor-pointer "},[]),o=(0,t.default)("div",{className:"dropdown-content"},[...n.map((e=>{return n=e.innerText,a=e.href,"bg-primary-light-1 bg-hover-primary-dark-2",(0,t.default)("a",{innerText:n,href:a,className:"bg-primary-light-1 bg-hover-primary-dark-2"},"github repo"===n.toLowerCase()?[s]:[]);var n,a}))]);return(0,t.default)("div",{className:"dropdown bg-primary-light-1 text-uppercase bg-hover-primary-dark-2 cursor-pointer mr-1"},[r,o])}},"./src/components/NavBar/MenuButton.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>c});var t=s("./src/components/Element.js"),a=s("./src/components/base-elements/Icon.js"),r=s("./src/managers/uiManager/uiManager.js");function o(){r.default.toggleMobileMenu()}const c=()=>{const e=(0,a.default)("icon-hamburger-menu text-white font-lg"),n=(0,t.default)("button",{className:"menu-button m-1 btn bg-transparent border-none",onclick:o},[e]);return(0,t.default)("div",{className:"container"},[n])}},"./src/components/NavBar/MobileMenu.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>r});var t=s("./src/components/Element.js"),a=s("./src/components/NavBar/NavLinks.js");const r=()=>(0,t.default)("div",{id:"",className:"mobile-menu text-uppercase"},[(0,a.default)(!0)])},"./src/components/NavBar/MobileMenuAccordionLink.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>o});var t=s("./src/components/Element.js"),a=s("./src/components/base-elements/Icon.js"),r=s("./node_modules/uuid/dist/esm-browser/v4.js");const o=e=>{const n=(0,r.default)(),s=(0,a.default)("icon-github-cat ml-half"),o=e.subLinkObjects?e.subLinkObjects:[],c=(0,t.default)("a",{className:"panel-title bg-transparent text-white border-none text-uppercase cursor-pointer ",innerText:e.innerText,onclick(){const e=document.getElementById("accordion-content-wrapper-"+n),s=document.getElementById("accordion-panel-"+n);e.classList.toggle("visible"),s.classList.toggle("clicked")}}),u=(0,t.default)("div",{className:"accordion-content"},[...o.map((e=>{return n=e.innerText,a=e.href,"bg-hover-primary-light-2 ml-1",(0,t.default)("a",{innerText:n,href:a,className:"bg-hover-primary-light-2 ml-1"},"github repo"===n.toLowerCase()?[s]:[]);var n,a}))]),i=(0,t.default)("div",{id:`accordion-content-wrapper-${n}`,className:"accordion-content-wrapper"},[u]);return(0,t.default)("div",{id:"accordion-panel-"+n,className:"accordion-panel bg-primary-light-1 p-1 text-uppercase bg-hover-primary-dark-2 cursor-pointer"},[c,i])}},"./src/components/NavBar/NabBar.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>c});var t=s("./src/components/Element.js"),a=s("./src/components/NavBar/NavLinks.js"),r=s("./src/components/NavBar/MenuButton.js"),o=s("./src/components/NavBar/MobileMenu.js");const c=()=>{const e=(0,t.default)("h2",{className:"text-lg",innerText:"Navbar.com"}),n=(0,t.default)("p",{className:"",innerText:"I made this myself"}),s=(e,n)=>(0,t.default)("div",{className:`${e} container`},[...n]),c=(0,t.default)("nav",{className:"container bg-primary flex-column navbar "},[s("p-1 flex-wrap",[e,n]),s("nav-links",[(0,a.default)()]),s("",[(0,r.default)()])]);return(0,t.default)("div",{className:"nav-wrapper text-white"},[c,(0,o.default)()])}},"./src/components/NavBar/NavLink.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});var t=s("./src/components/Element.js");const a=e=>{const{innerText:n}=e,{href:s}=e,a=(0,t.default)("div",{id:"",className:"bg-primary-light-1 p-1 text-uppercase bg-hover-primary-dark-2 cursor-pointer mr-1"},[((e,n,s)=>(0,t.default)("a",{innerText:e,href:n,className:""}))(n,s)]);return a}},"./src/components/NavBar/NavLinks.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>u});var t=s("./src/components/Element.js"),a=s("./src/components/NavBar/NavLink.js"),r=s("./src/components/NavBar/ExpandableNavLink.js"),o=s("./src/managers/dataManagers/navLinkData.js"),c=s("./src/components/NavBar/MobileMenuAccordionLink.js");const u=e=>(e=!!e,(0,t.default)("ul",{className:"container nav-links text-uppercase"},o.navLinkElementInfo.map((n=>n.subLinkObjects?e?(0,c.default)(n):(0,r.default)(n):(0,a.default)(n)))))},"./src/components/base-elements/Icon.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});var t=s("./src/components/Element.js");const a=e=>(0,t.default)("i",{className:`icon ${e} display-i-b`})},"./src/components/base-elements/Image.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});var t=s("./src/components/Element.js");const a=e=>(0,t.default)("img",{src:e})},"./src/managers/dataManagers/navLinkData.js":(e,n,s)=>{s.r(n),s.d(n,{navLinkElementInfo:()=>t});const t=[{innerText:"contact",href:"#",subLinkObjects:[{innerText:"Github Repo",href:"https://github.com/carlin-mitchell/custom-components-js"},{innerText:"Github Live",href:"https://carlin-mitchell.github.io/custom-components-js/"},{innerText:"Sub Link 3",href:"#"},{innerText:"Sub Link 4",href:"#"}]},{innerText:"about",href:"#"},{innerText:"pricing",href:"#"},{innerText:"links",href:"#",subLinkObjects:[{innerText:"Sub Link 1",href:"#"},{innerText:"Sub Link 2",href:"#"},{innerText:"Sub Link 3",href:"#"},{innerText:"Sub Link 4",href:"#"}]},{innerText:"events",href:"#",subLinkObjects:[{innerText:"Sub Link 1",href:"#"},{innerText:"Sub Link 2",href:"#"},{innerText:"Sub Link 3",href:"#"},{innerText:"Sub Link 4",href:"#"}]}]},"./src/managers/uiManager/initialState.js":(e,n,s)=>{s.r(n),s.d(n,{applyInitialState:()=>a});var t=s("./src/managers/uiManager/windowEventListeners.js");function a(){(0,t.applyWindowListeners)()}s("./src/components/ImageCarousel/ui/carousel-ui.js")},"./src/managers/uiManager/mobileMenu-ui.js":(e,n,s)=>{function t(){document.querySelector(".mobile-menu").classList.contains("menu-down")?a():r()}function a(){const e=document.querySelector(".mobile-menu");e.classList.remove("menu-down"),e.classList.add("menu-up")}function r(){const e=document.querySelector(".mobile-menu");e.classList.remove("menu-up"),e.classList.add("menu-down")}s.r(n),s.d(n,{mobileMenuDown:()=>r,mobileMenuUp:()=>a,toggleMobileMenu:()=>t})},"./src/managers/uiManager/uiManager.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});var t=s("./src/managers/uiManager/mobileMenu-ui.js");const a={toggleMobileMenu:t.toggleMobileMenu,mobileMenuUp:t.mobileMenuUp}},"./src/managers/uiManager/windowEventListeners.js":(e,n,s)=>{s.r(n),s.d(n,{applyWindowListeners:()=>o});var t=s("./src/managers/uiManager/mobileMenu-ui.js"),a=s("./src/utils.js");const r={xs:0,sm:480,md:720,lg:960,xl:1200};function o(){window.onresize=(0,a.debounce)((function(e){const{innerWidth:n}=e.target;n>=r.md&&document.querySelector(".mobile-menu").classList.contains("menu-down")&&(0,t.mobileMenuUp)()}))}},"./src/utils.js":(e,n,s)=>{s.r(n),s.d(n,{capitalize:()=>r,debounce:()=>a,truncateAndAddEllipse:()=>t});const t=(e,n)=>e.slice(0,n).trimEnd()+"...",a=function(e){let n;return function(){let s=this,t=arguments;n&&window.cancelAnimationFrame(n),n=window.requestAnimationFrame((function(){e.apply(s,t)}))}};function r(e){return e?e[0].toUpperCase()+e.slice(1).toLowerCase():e}},"./src/components/ImageCarousel/assets/brick.png":(e,n,s)=>{e.exports=s.p+"67ae7fce1151c2d3079d.png"},"./src/components/ImageCarousel/assets/computer.png":(e,n,s)=>{e.exports=s.p+"3ee4c9ea33159582bdba.png"},"./src/components/ImageCarousel/assets/mac.png":(e,n,s)=>{e.exports=s.p+"ee5457e45a1adb489afc.png"},"./src/components/ImageCarousel/assets/paint-face.png":(e,n,s)=>{e.exports=s.p+"4a31a7dd5d0e7aedc21f.png"},"./src/components/ImageCarousel/assets/webdev.png":(e,n,s)=>{e.exports=s.p+"8f87830f60b2c97958dd.png"}},n={};function s(t){var a=n[t];if(void 0!==a)return a.exports;var r=n[t]={exports:{}};return e[t](r,r.exports,s),r.exports}s.d=(e,n)=>{for(var t in n)s.o(n,t)&&!s.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},s.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),s.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),s.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;s.g.importScripts&&(e=s.g.location+"");var n=s.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var t=n.getElementsByTagName("script");if(t.length)for(var a=t.length-1;a>-1&&!e;)e=t[a--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),s.p=e})();var t={};(()=>{s.r(t),s("./src/styles/index.scss");var e=s("./src/components/Content/Content.js"),n=(s("./src/managers/uiManager/windowEventListeners.js"),s("./src/managers/uiManager/initialState.js"));document.body.appendChild((0,e.default)()),document.body.classList.add("p-2"),(0,n.applyInitialState)()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,