/*! For license information please see bundle.js.LICENSE.txt */
(()=>{"use strict";var e={"./src/styles/index.scss":(e,n,s)=>{s.r(n)},"./node_modules/uuid/dist/esm-browser/regex.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>t});const t=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i},"./node_modules/uuid/dist/esm-browser/rng.js":(e,n,s)=>{var t;s.r(n),s.d(n,{default:()=>a});var r=new Uint8Array(16);function a(){if(!t&&!(t="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return t(r)}},"./node_modules/uuid/dist/esm-browser/stringify.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>o});for(var t=s("./node_modules/uuid/dist/esm-browser/validate.js"),r=[],a=0;a<256;++a)r.push((a+256).toString(16).substr(1));const o=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,s=(r[e[n+0]]+r[e[n+1]]+r[e[n+2]]+r[e[n+3]]+"-"+r[e[n+4]]+r[e[n+5]]+"-"+r[e[n+6]]+r[e[n+7]]+"-"+r[e[n+8]]+r[e[n+9]]+"-"+r[e[n+10]]+r[e[n+11]]+r[e[n+12]]+r[e[n+13]]+r[e[n+14]]+r[e[n+15]]).toLowerCase();if(!(0,t.default)(s))throw TypeError("Stringified UUID is invalid");return s}},"./node_modules/uuid/dist/esm-browser/v4.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});var t=s("./node_modules/uuid/dist/esm-browser/rng.js"),r=s("./node_modules/uuid/dist/esm-browser/stringify.js");const a=function(e,n,s){var a=(e=e||{}).random||(e.rng||t.default)();if(a[6]=15&a[6]|64,a[8]=63&a[8]|128,n){s=s||0;for(var o=0;o<16;++o)n[s+o]=a[o];return n}return(0,r.default)(a)}},"./node_modules/uuid/dist/esm-browser/validate.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>r});var t=s("./node_modules/uuid/dist/esm-browser/regex.js");const r=function(e){return"string"==typeof e&&t.default.test(e)}},"./src/components/ComponentSection/ComponentSection.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>r});var t=s("./src/components/Element.js");const r=(e,n,s=!1)=>{const r=(0,t.default)("h2",{className:"mb-2",innerText:e});n=(0,t.default)("div",{className:"component-body"},[n]);const a=(0,t.default)("div",{className:"p-1 hr-div "},[(0,t.default)("hr")]),o=(0,t.default)("div",{className:"component-section"});return o.appendChild(r),n&&o.appendChild(n),s&&n.appendChild(a),o}},"./src/components/Content/Content.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>c});var t=s("./src/components/Element.js"),r=s("./src/components/ComponentSection/ComponentSection.js"),a=s("./src/components/NavBar/NabBar.js"),o=s("./src/components/ImageCarousel/ImageCarousel.js");s("./src/components/base-elements/Icon.js");const c=()=>{const e=(0,t.default)("div",{id:"content"});return e.appendChild((0,r.default)("Navbar With Dropdown",(0,a.default)(),!0)),e.appendChild((0,r.default)("Image Carousel",(0,o.default)(),!0)),e}},"./src/components/Element.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>t});const t=(e,n,s=null)=>{s&&!Array.isArray(s)&&(s=[s]);const t=Object.assign(document.createElement(e),n);return s&&s.forEach((e=>t.appendChild(e))),t}},"./src/components/ImageCarousel/CarouselNav.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});var t=s("./src/components/Element.js"),r=s("./src/components/ImageCarousel/ui/carousel-ui.js");const a=e=>(0,t.default)("div",{id:"",className:"carousel-nav pt-1"},[...e.map(((e,n)=>{return s=e.uuid,a=!!e.isActive,(0,t.default)("button",{id:`carousel-nav-${s}`,className:"carousel-indicator display-i-b bg-gray-light-6 "+(a?"active":""),onclick:function(){(0,r.clickCarouselNav)(s)}});var s,a}))])},"./src/components/ImageCarousel/CarouselSlide.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>r});var t=s("./src/components/Element.js");s("./src/components/base-elements/Image.js");const r=(e,n,s)=>{const r=(0,t.default)("img",{src:e,className:"carousel-image"});return(0,t.default)("div",{id:"carousel-slide-"+n,className:"carousel-slide "+(s?"active":"")},[r])}},"./src/components/ImageCarousel/CarouselTrack.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});var t=s("./src/components/Element.js"),r=s("./src/components/ImageCarousel/CarouselSlide.js");s("./src/components/ImageCarousel/assets/brick.png"),s("./src/components/ImageCarousel/assets/paint-face.png"),s("./src/components/ImageCarousel/assets/mac.png");const a=e=>(0,t.default)("ul",{id:"",className:"carousel-track"},[...e.map(((e,n)=>(0,r.default)(e.src,e.uuid,!!e.isActive)))])},"./src/components/ImageCarousel/CarouselTrackContainer.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});var t=s("./src/components/Element.js"),r=s("./src/components/ImageCarousel/CarouselTrack.js");const a=e=>(0,t.default)("div",{id:"",className:"carousel-track-container"},[(0,r.default)(e)])},"./src/components/ImageCarousel/ImageCarousel.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>l});var t=s("./src/components/Element.js"),r=s("./src/components/ImageCarousel/LeftButton.js"),a=s("./src/components/ImageCarousel/RightButton.js"),o=s("./src/components/ImageCarousel/CarouselTrackContainer.js"),c=s("./src/components/ImageCarousel/CarouselNav.js"),u=s("./node_modules/uuid/dist/esm-browser/v4.js"),i=s("./src/components/ImageCarousel/data/imageLoader.js");const l=()=>{const e="bg-transparent border-none p-1",n=(0,r.default)(e),s=(0,a.default)(e);return Array(4).fill(null).map((e=>(0,u.default)())),(0,t.default)("div",{id:"",className:"carousel pt-1 pb-1"},[n,(0,o.default)(i.imageData),s,(0,c.default)(i.imageData)])}},"./src/components/ImageCarousel/LeftButton.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>o});var t=s("./src/components/Element.js"),r=s("./src/components/base-elements/Icon.js"),a=s("./src/components/ImageCarousel/ui/carousel-ui.js");const o=e=>{const n=(0,r.default)("icon-up-arrow rotate-270 ");return(0,t.default)("button",{id:"",className:"carousel-button left "+e,onclick(){(0,a.clickCarouselLeft)()}},[n])}},"./src/components/ImageCarousel/RightButton.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>o});var t=s("./src/components/Element.js"),r=s("./src/components/base-elements/Icon.js"),a=s("./src/components/ImageCarousel/ui/carousel-ui.js");const o=e=>{const n=(0,r.default)("icon-up-arrow rotate-90");return(0,t.default)("button",{id:"",className:"carousel-button right "+e,onclick(){(0,a.clickCarouselRight)()}},[n])}},"./src/components/ImageCarousel/data/imageLoader.js":(e,n,s)=>{s.r(n),s.d(n,{imageData:()=>u});var t=s("./node_modules/uuid/dist/esm-browser/v4.js"),r=s("./src/components/ImageCarousel/assets/brick.png"),a=s("./src/components/ImageCarousel/assets/paint-face.png"),o=s("./src/components/ImageCarousel/assets/mac.png"),c=s("./src/components/ImageCarousel/assets/computer.png");const u=[{src:r,uuid:(0,t.default)(),isActive:!0},{src:a,uuid:(0,t.default)()},{src:o,uuid:(0,t.default)()},{src:c,uuid:(0,t.default)()}]},"./src/components/ImageCarousel/ui/carousel-ui.js":(e,n,s)=>{function t(){return[...document.querySelector(".carousel-track").childNodes]}function r(){return t().map((e=>e.id))}function a(){const e=r(),n=document.querySelector(".carousel-slide.active").id;return e.indexOf(n)}function o(e){const n=[...document.querySelectorAll(".carousel-indicator")],s=document.getElementById(`carousel-nav-${e}`),r=document.getElementById(`carousel-slide-${e}`);t().forEach((e=>e.classList.remove("active"))),r.classList.add("active"),n.forEach((e=>e.classList.remove("active"))),s.classList.add("active")}function c(e){o(e)}function u(){const e=r()[function(){let e=a()+1;return e>r().length-1?0:e}()].replace("carousel-slide-","");console.log(e),o(e)}function i(){const e=r()[function(){let e=a()-1;return e<0?r().length-1:e}()].replace("carousel-slide-","");console.log(e),o(e)}s.r(n),s.d(n,{clickCarouselLeft:()=>i,clickCarouselNav:()=>c,clickCarouselRight:()=>u,gotoSpecificSlide:()=>o})},"./src/components/NavBar/ExpandableNavLink.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});var t=s("./src/components/Element.js"),r=(s("./src/components/NavBar/NavLink.js"),s("./src/components/base-elements/Icon.js"));const a=e=>{const n=e.subLinkObjects?e.subLinkObjects:[],s=(0,r.default)("icon-github-cat ml-half"),a=(0,t.default)("a",{innerText:e.innerText,className:"top-link pt-1 pr-2 pb-1 pl-1 bg-transparent text-white border-none text-uppercase cursor-pointer "},[]),o=(0,t.default)("div",{className:"dropdown-content"},[...n.map((e=>{return n=e.innerText,r=e.href,"bg-primary-light-1 bg-hover-primary-dark-2",(0,t.default)("a",{innerText:n,href:r,className:"bg-primary-light-1 bg-hover-primary-dark-2"},"github repo"===n.toLowerCase()?[s]:[]);var n,r}))]);return(0,t.default)("div",{className:"dropdown bg-primary-light-1 text-uppercase bg-hover-primary-dark-2 cursor-pointer mr-1"},[a,o])}},"./src/components/NavBar/MenuButton.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>c});var t=s("./src/components/Element.js"),r=s("./src/components/base-elements/Icon.js"),a=s("./src/managers/uiManager/uiManager.js");function o(){a.default.toggleMobileMenu()}const c=()=>{const e=(0,r.default)("icon-hamburger-menu text-white font-lg"),n=(0,t.default)("button",{className:"menu-button m-1 btn bg-transparent border-none",onclick:o},[e]);return(0,t.default)("div",{className:"container"},[n])}},"./src/components/NavBar/MobileMenu.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});var t=s("./src/components/Element.js"),r=s("./src/components/NavBar/NavLinks.js");const a=()=>(0,t.default)("div",{id:"",className:"mobile-menu"},[(0,r.default)(!0)])},"./src/components/NavBar/NabBar.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>c});var t=s("./src/components/Element.js"),r=s("./src/components/NavBar/NavLinks.js"),a=s("./src/components/NavBar/MenuButton.js"),o=s("./src/components/NavBar/MobileMenu.js");const c=()=>{const e=(0,t.default)("h2",{className:"text-lg",innerText:"Navbar.com"}),n=(0,t.default)("p",{className:"",innerText:"I made this myself"}),s=(e,n)=>(0,t.default)("div",{className:`${e} container`},[...n]),c=(0,t.default)("nav",{className:"container bg-primary flex-column navbar"},[s("p-1 flex-wrap",[e,n]),s("nav-links",[(0,r.default)()]),s("",[(0,a.default)()])]);return(0,t.default)("div",{className:"nav-wrapper text-white"},[c,(0,o.default)()])}},"./src/components/NavBar/NavLink.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>r});var t=s("./src/components/Element.js");const r=e=>{const{innerText:n}=e,{href:s}=e,r=(0,t.default)("div",{id:"",className:"bg-primary-light-1 p-1 text-uppercase bg-hover-primary-dark-2 cursor-pointer mr-1"},[((e,n,s)=>(0,t.default)("a",{innerText:e,href:n,className:""}))(n,s)]);return r}},"./src/components/NavBar/NavLinks.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>c});var t=s("./src/components/Element.js"),r=s("./src/components/NavBar/NavLink.js"),a=s("./src/components/NavBar/ExpandableNavLink.js"),o=s("./src/managers/dataManagers/navLinkData.js");const c=e=>(e=!!e,(0,t.default)("ul",{className:"container nav-links"},o.navLinkElementInfo.map((n=>n.subLinkObjects&&!e?(0,a.default)(n):(0,r.default)(n)))))},"./src/components/base-elements/Icon.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>r});var t=s("./src/components/Element.js");const r=e=>(0,t.default)("i",{className:`icon ${e} display-i-b`})},"./src/components/base-elements/Image.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>r});var t=s("./src/components/Element.js");const r=e=>(0,t.default)("img",{src:e})},"./src/managers/dataManagers/navLinkData.js":(e,n,s)=>{s.r(n),s.d(n,{navLinkElementInfo:()=>t});const t=[{innerText:"contact",href:"#",subLinkObjects:[{innerText:"Github Repo",href:"https://github.com/carlin-mitchell/custom-components-js"},{innerText:"Github Live",href:"https://carlin-mitchell.github.io/custom-components-js/"},{innerText:"Sub Link 3",href:"#"},{innerText:"Sub Link 4",href:"#"}]},{innerText:"about",href:"#"},{innerText:"pricing",href:"#"},{innerText:"links",href:"#",subLinkObjects:[{innerText:"Sub Link 1",href:"#"},{innerText:"Sub Link 2",href:"#"},{innerText:"Sub Link 3",href:"#"},{innerText:"Sub Link 4",href:"#"}]},{innerText:"events",href:"#",subLinkObjects:[{innerText:"Sub Link 1",href:"#"},{innerText:"Sub Link 2",href:"#"},{innerText:"Sub Link 3",href:"#"},{innerText:"Sub Link 4",href:"#"}]}]},"./src/managers/uiManager/mobileMenu-ui.js":(e,n,s)=>{function t(){document.querySelector(".mobile-menu").classList.contains("menu-down")?r():a()}function r(){const e=document.querySelector(".mobile-menu");e.classList.remove("menu-down"),e.classList.add("menu-up")}function a(){const e=document.querySelector(".mobile-menu");e.classList.remove("menu-up"),e.classList.add("menu-down")}s.r(n),s.d(n,{mobileMenuDown:()=>a,mobileMenuUp:()=>r,toggleMobileMenu:()=>t})},"./src/managers/uiManager/uiManager.js":(e,n,s)=>{s.r(n),s.d(n,{default:()=>r});var t=s("./src/managers/uiManager/mobileMenu-ui.js");const r={toggleMobileMenu:t.toggleMobileMenu,mobileMenuUp:t.mobileMenuUp}},"./src/managers/uiManager/windowEventListeners.js":(e,n,s)=>{s.r(n),s.d(n,{applyWindowListeners:()=>o});var t=s("./src/managers/uiManager/mobileMenu-ui.js"),r=s("./src/utils.js");s("./src/components/ImageCarousel/ui/carousel-ui.js");const a={xs:0,sm:480,md:720,lg:960,xl:1200};function o(){window.onresize=(0,r.debounce)((function(e){const{innerWidth:n}=e.target;n>=a.md&&document.querySelector(".mobile-menu").classList.contains("menu-down")&&(0,t.mobileMenuUp)()}))}},"./src/utils.js":(e,n,s)=>{s.r(n),s.d(n,{capitalize:()=>a,debounce:()=>r,truncateAndAddEllipse:()=>t});const t=(e,n)=>e.slice(0,n).trimEnd()+"...",r=function(e){let n;return function(){let s=this,t=arguments;n&&window.cancelAnimationFrame(n),n=window.requestAnimationFrame((function(){e.apply(s,t)}))}};function a(e){return e?e[0].toUpperCase()+e.slice(1).toLowerCase():e}},"./src/components/ImageCarousel/assets/brick.png":(e,n,s)=>{e.exports=s.p+"67ae7fce1151c2d3079d.png"},"./src/components/ImageCarousel/assets/computer.png":(e,n,s)=>{e.exports=s.p+"3ee4c9ea33159582bdba.png"},"./src/components/ImageCarousel/assets/mac.png":(e,n,s)=>{e.exports=s.p+"ee5457e45a1adb489afc.png"},"./src/components/ImageCarousel/assets/paint-face.png":(e,n,s)=>{e.exports=s.p+"4a31a7dd5d0e7aedc21f.png"}},n={};function s(t){var r=n[t];if(void 0!==r)return r.exports;var a=n[t]={exports:{}};return e[t](a,a.exports,s),a.exports}s.d=(e,n)=>{for(var t in n)s.o(n,t)&&!s.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},s.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),s.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),s.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;s.g.importScripts&&(e=s.g.location+"");var n=s.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var t=n.getElementsByTagName("script");if(t.length)for(var r=t.length-1;r>-1&&!e;)e=t[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),s.p=e})();var t={};(()=>{s.r(t),s("./src/styles/index.scss");var e=s("./src/components/Content/Content.js"),n=s("./src/managers/uiManager/windowEventListeners.js");document.body.appendChild((0,e.default)()),document.body.classList.add("p-2"),(0,n.applyWindowListeners)()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,